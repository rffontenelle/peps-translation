# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the PEPs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version:  PEPs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-20 10:43-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"

#: ../../peps/pep-0376.rst
msgid "Author"
msgstr "Autor"

#: ../../peps/pep-0376.rst:3
msgid "Tarek Ziadé <tarek@ziade.org>"
msgstr ""

#: ../../peps/pep-0376.rst
msgid "Status"
msgstr "Status"

#: ../../peps/pep-0376.rst:4
msgid "Final"
msgstr ""

#: ../../peps/pep-0376.rst
msgid "Type"
msgstr "Tipo"

#: ../../peps/pep-0376.rst:5
msgid "Standards Track"
msgstr ""

#: ../../peps/pep-0376.rst
msgid "Topic"
msgstr ""

#: ../../peps/pep-0376.rst:6
msgid "Packaging"
msgstr ""

#: ../../peps/pep-0376.rst
msgid "Created"
msgstr "Criada em"

#: ../../peps/pep-0376.rst:8
msgid "22-Feb-2009"
msgstr ""

#: ../../peps/pep-0376.rst
msgid "Python-Version"
msgstr ""

#: ../../peps/pep-0376.rst:9
msgid "2.7, 3.2"
msgstr ""

#: ../../peps/pep-0376.rst
msgid "Post-History"
msgstr "Pós-história"

#: ../../peps/pep-0376.rst:10
msgid ""
"`22-Jun-2009 <https://mail.python.org/archives/list/python-"
"dev@python.org/thread/ILLTIOZAULMDY5CAS6GOITEYJ4HNFATQ/>`__"
msgstr ""

#: ../../peps/pep-0376.rst:17
msgid "Abstract"
msgstr ""

#: ../../peps/pep-0376.rst:19
msgid ""
"The goal of this PEP is to provide a standard infrastructure to manage "
"project distributions installed on a system, so all tools that are "
"installing or removing projects are interoperable."
msgstr ""

#: ../../peps/pep-0376.rst:23
msgid ""
"To achieve this goal, the PEP proposes a new format to describe installed"
" distributions on a system. It also describes a reference implementation "
"for the standard library."
msgstr ""

#: ../../peps/pep-0376.rst:27
msgid ""
"In the past an attempt was made to create an installation database (see "
":pep:`262`)."
msgstr ""

#: ../../peps/pep-0376.rst:30
msgid "Combined with :pep:`345`, the current proposal supersedes :pep:`262`."
msgstr ""

#: ../../peps/pep-0376.rst:32
msgid ""
"Note: the implementation plan didn't go as expected, so it should be "
"considered informative only for this PEP."
msgstr ""

#: ../../peps/pep-0376.rst:37
msgid "Rationale"
msgstr ""

#: ../../peps/pep-0376.rst:39
msgid ""
"There are two problems right now in the way distributions are installed "
"in Python:"
msgstr ""

#: ../../peps/pep-0376.rst:42
msgid "There are too many ways to do it and this makes interoperation difficult."
msgstr ""

#: ../../peps/pep-0376.rst:43
msgid "There is no API to get information on installed distributions."
msgstr ""

#: ../../peps/pep-0376.rst:46
msgid "How distributions are installed"
msgstr ""

#: ../../peps/pep-0376.rst:48
msgid ""
"Right now, when a distribution is installed in Python, every element can "
"be installed in a different directory."
msgstr ""

#: ../../peps/pep-0376.rst:51
msgid ""
"For instance, ``Distutils`` installs the pure Python code in the "
"``purelib`` directory, which is ``lib/python2.6/site-packages`` for unix-"
"like systems and Mac OS X, or ``Lib\\site-packages`` under Python's "
"installation directory for Windows."
msgstr ""

#: ../../peps/pep-0376.rst:56
msgid ""
"Additionally, the ``install_egg_info`` subcommand of the Distutils "
"``install`` command adds an ``.egg-info`` file for the project into the "
"``purelib`` directory."
msgstr ""

#: ../../peps/pep-0376.rst:60
msgid ""
"For example, for the ``docutils`` distribution, which contains one "
"package an extra module and executable scripts, three elements are "
"installed in ``site-packages``:"
msgstr ""

#: ../../peps/pep-0376.rst:64
msgid "``docutils``: The ``docutils`` package."
msgstr ""

#: ../../peps/pep-0376.rst:65
msgid "``roman.py``: An extra module used by ``docutils``."
msgstr ""

#: ../../peps/pep-0376.rst:66
msgid ""
"``docutils-0.5-py2.6.egg-info``: A file containing the distribution "
"metadata as described in :pep:`314`. This file corresponds to the file "
"called ``PKG-INFO``, built by the ``sdist`` command."
msgstr ""

#: ../../peps/pep-0376.rst:70
msgid ""
"Some executable scripts, such as ``rst2html.py``, are also added in the "
"``bin`` directory of the Python installation."
msgstr ""

#: ../../peps/pep-0376.rst:73
msgid ""
"Another project called ``setuptools`` [#setuptools]_ has two other "
"formats to install distributions, called ``EggFormats`` [#eggformats]_:"
msgstr ""

#: ../../peps/pep-0376.rst:76
msgid ""
"a self-contained ``.egg`` directory, that contains all the distribution "
"files and the distribution metadata in a file called ``PKG-INFO`` in a "
"subdirectory called ``EGG-INFO``. ``setuptools`` creates other files in "
"that directory that can be considered as complementary metadata."
msgstr ""

#: ../../peps/pep-0376.rst:81
msgid ""
"an ``.egg-info`` directory installed in ``site-packages``, that contains "
"the same files ``EGG-INFO`` has in the ``.egg`` format."
msgstr ""

#: ../../peps/pep-0376.rst:84
msgid ""
"The first format is automatically used when you install a distribution "
"that uses the ``setuptools.setup`` function in its setup.py file, instead"
" of the ``distutils.core.setup`` one."
msgstr ""

#: ../../peps/pep-0376.rst:88
msgid ""
"``setuptools`` also add a reference to the distribution into an ``easy-"
"install.pth`` file."
msgstr ""

#: ../../peps/pep-0376.rst:91
msgid ""
"Last, the ``setuptools`` project provides an executable script called "
"``easy_install`` [#easyinstall]_ that installs all distributions, "
"including distutils-based ones in self-contained ``.egg`` directories."
msgstr ""

#: ../../peps/pep-0376.rst:95
msgid ""
"If you want to have standalone ``.egg-info`` directories for your "
"distributions, e.g. the second ``setuptools`` format, you have to force "
"it when you work with a setuptools-based distribution or with the "
"``easy_install`` script. You can force it by using the ``--single-"
"version-externally-managed`` option **or** the ``--root`` option. This "
"will make the ``setuptools`` project install the project like distutils "
"does."
msgstr ""

#: ../../peps/pep-0376.rst:102
msgid "This option is used by :"
msgstr ""

#: ../../peps/pep-0376.rst:104
msgid "the ``pip`` [#pip]_ installer"
msgstr ""

#: ../../peps/pep-0376.rst:105
msgid "the Fedora packagers [#fedora]_."
msgstr ""

#: ../../peps/pep-0376.rst:106
msgid "the Debian packagers [#debian]_."
msgstr ""

#: ../../peps/pep-0376.rst:109
msgid "Uninstall information"
msgstr ""

#: ../../peps/pep-0376.rst:111
msgid ""
"Distutils doesn't provide an ``uninstall`` command. If you want to "
"uninstall a distribution, you have to be a power user and remove the "
"various elements that were installed, and then look over the ``.pth`` "
"file to clean them if necessary."
msgstr ""

#: ../../peps/pep-0376.rst:116
msgid ""
"And the process differs depending on the tools you have used to install "
"the distribution and if the distribution's ``setup.py`` uses Distutils or"
" Setuptools."
msgstr ""

#: ../../peps/pep-0376.rst:120
msgid ""
"Under some circumstances, you might not be able to know for sure that you"
" have removed everything, or that you didn't break another distribution "
"by removing a file that is shared among several distributions."
msgstr ""

#: ../../peps/pep-0376.rst:124
msgid ""
"But there's a common behavior: when you install a distribution, files are"
" copied in your system. And it's possible to keep track of these files "
"for later removal."
msgstr ""

#: ../../peps/pep-0376.rst:128
msgid ""
"Moreover, the Pip project has gained an ``uninstall`` feature lately. It "
"records all installed files, using the ``record`` option of the "
"``install`` command."
msgstr ""

#: ../../peps/pep-0376.rst:133
msgid "What this PEP proposes"
msgstr ""

#: ../../peps/pep-0376.rst:135
msgid "To address those issues, this PEP proposes a few changes:"
msgstr ""

#: ../../peps/pep-0376.rst:137
msgid ""
"A new ``.dist-info`` structure using a directory, inspired on one format "
"of the ``EggFormats`` standard from ``setuptools``."
msgstr ""

#: ../../peps/pep-0376.rst:139
msgid ""
"New APIs in ``pkgutil`` to be able to query the information of installed "
"distributions."
msgstr ""

#: ../../peps/pep-0376.rst:141
msgid "An uninstall function and an uninstall script in Distutils."
msgstr ""

#: ../../peps/pep-0376.rst:145
msgid "One .dist-info directory per installed distribution"
msgstr ""

#: ../../peps/pep-0376.rst:147
msgid ""
"This PEP proposes an installation format inspired by one of the options "
"in the ``EggFormats`` standard, the one that uses a distinct directory "
"located in the site-packages directory."
msgstr ""

#: ../../peps/pep-0376.rst:151
msgid "This distinct directory is named as follows::"
msgstr ""

#: ../../peps/pep-0376.rst:155
msgid "This ``.dist-info`` directory can contain these files:"
msgstr ""

#: ../../peps/pep-0376.rst:157
msgid ""
"``METADATA``: contains metadata, as described in :pep:`345`, :pep:`314` "
"and :pep:`241`."
msgstr ""

#: ../../peps/pep-0376.rst:158
msgid "``RECORD``: records the list of installed files"
msgstr ""

#: ../../peps/pep-0376.rst:159
msgid "``INSTALLER``: records the name of the tool used to install the project"
msgstr ""

#: ../../peps/pep-0376.rst:160
msgid ""
"``REQUESTED``: the presence of this file indicates that the project "
"installation was explicitly requested (i.e., not installed as a "
"dependency)."
msgstr ""

#: ../../peps/pep-0376.rst:163
msgid ""
"The METADATA, RECORD and INSTALLER files are mandatory, while REQUESTED "
"may be missing."
msgstr ""

#: ../../peps/pep-0376.rst:166
msgid ""
"This proposal will not impact Python itself because the metadata files "
"are not used anywhere yet in the standard library besides Distutils."
msgstr ""

#: ../../peps/pep-0376.rst:169
msgid ""
"It will impact the ``setuptools`` and ``pip`` projects but, given the "
"fact that they already work with a directory that contains a ``PKG-INFO``"
" file, the change will have no deep consequences."
msgstr ""

#: ../../peps/pep-0376.rst:175
msgid "RECORD"
msgstr ""

#: ../../peps/pep-0376.rst:177
msgid ""
"A ``RECORD`` file is added inside the ``.dist-info`` directory at "
"installation time when installing a source distribution using the "
"``install`` command. Notice that when installing a binary distribution "
"created with ``bdist`` command or a ``bdist``-based command, the "
"``RECORD`` file will be installed as well since these commands use the "
"``install`` command to create binary distributions."
msgstr ""

#: ../../peps/pep-0376.rst:183
msgid ""
"The ``RECORD`` file holds the list of installed files. These correspond "
"to the files listed by the ``record`` option of the ``install`` command, "
"and will be generated by default. This allows the implementation of an "
"uninstallation feature, as explained later in this PEP. The ``install`` "
"command also provides an option to prevent the ``RECORD`` file from being"
" written and this option should be used when creating system packages."
msgstr ""

#: ../../peps/pep-0376.rst:190
msgid ""
"Third-party installation tools also should not overwrite or delete files "
"that are not in a RECORD file without prompting or warning."
msgstr ""

#: ../../peps/pep-0376.rst:193
msgid "This RECORD file is inspired from :pep:`262` FILES."
msgstr ""

#: ../../peps/pep-0376.rst:195
msgid ""
"The ``RECORD`` file is a CSV file, composed of records, one line per "
"installed file. The ``csv`` module is used to read the file, with these "
"options:"
msgstr ""

#: ../../peps/pep-0376.rst:199
msgid "field delimiter : ``,``"
msgstr ""

#: ../../peps/pep-0376.rst:200
msgid "quoting char :  ``\"``."
msgstr ""

#: ../../peps/pep-0376.rst:201
msgid "line terminator : ``os.linesep`` (so ``\\r\\n`` or ``\\n``)"
msgstr ""

#: ../../peps/pep-0376.rst:203
msgid "When a distribution is installed, files can be installed under:"
msgstr ""

#: ../../peps/pep-0376.rst:205
msgid ""
"the **base location**: path defined by the ``--install-lib`` option, "
"which defaults to the site-packages directory."
msgstr ""

#: ../../peps/pep-0376.rst:208
msgid ""
"the **installation prefix**: path defined by the ``--prefix`` option, "
"which defaults to ``sys.prefix``."
msgstr ""

#: ../../peps/pep-0376.rst:211
msgid "any other path on the system."
msgstr ""

#: ../../peps/pep-0376.rst:214
msgid "Each record is composed of three elements:"
msgstr ""

#: ../../peps/pep-0376.rst:216
msgid "the file's **path**"
msgstr ""

#: ../../peps/pep-0376.rst:218
msgid ""
"a '/'-separated path, relative to the **base location**, if the file is "
"under the **base location**."
msgstr ""

#: ../../peps/pep-0376.rst:221
msgid ""
"a '/'-separated path, relative to the **base location**, if the file is "
"under the  **installation prefix** AND if the **base location** is a "
"subpath of the **installation prefix**."
msgstr ""

#: ../../peps/pep-0376.rst:225
msgid "an absolute path, using the local platform separator"
msgstr ""

#: ../../peps/pep-0376.rst:227
msgid ""
"a hash of the file's contents. Notice that ``pyc`` and ``pyo`` generated "
"files don't have any hash because they are automatically produced from "
"``py`` files. So checking the hash of the corresponding ``py`` file is "
"enough to decide if the file and its associated ``pyc`` or ``pyo`` files "
"have changed."
msgstr ""

#: ../../peps/pep-0376.rst:233
msgid ""
"The hash is either the empty string or the hash algorithm as named in "
"``hashlib.algorithms_guaranteed``, followed by the equals character "
"``=``, followed by the urlsafe-base64-nopad encoding of the digest "
"(``base64.urlsafe_b64encode(digest)`` with trailing ``=`` removed)."
msgstr ""

#: ../../peps/pep-0376.rst:238
msgid "the file's size in bytes"
msgstr ""

#: ../../peps/pep-0376.rst:240
msgid ""
"The ``csv`` module is used to generate this file, so the field separator "
"is \",\". Any \",\" character found within a field is escaped "
"automatically by ``csv``."
msgstr ""

#: ../../peps/pep-0376.rst:244
msgid ""
"When the file is read, the ``U`` option is used so the universal newline "
"support (see :pep:`278`) is activated, avoiding any trouble reading a "
"file produced on a platform that uses a different new line terminator."
msgstr ""

#: ../../peps/pep-0376.rst:249
msgid "Here's an example of a RECORD file (extract)::"
msgstr ""

#: ../../peps/pep-0376.rst:262
msgid ""
"Notice that the ``RECORD`` file can't contain a hash of itself and is "
"just mentioned here"
msgstr ""

#: ../../peps/pep-0376.rst:264
msgid ""
"A project that installs a ``config.ini`` file in ``/etc/myapp`` will be "
"added like this::"
msgstr ""

#: ../../peps/pep-0376.rst:268
msgid ""
"For a windows platform, the drive letter is added for the absolute paths,"
" so a file that is copied in c:\\MyApp\\ will be::"
msgstr ""

#: ../../peps/pep-0376.rst:275
msgid "INSTALLER"
msgstr ""

#: ../../peps/pep-0376.rst:277
msgid ""
"The ``install`` command has a new option called ``installer``. This "
"option is the name of the tool used to invoke the installation. It's a "
"normalized lower-case string matching ``[a-z0-9_\\-\\.]``."
msgstr ""

#: ../../peps/pep-0376.rst:281
msgid "$ python setup.py install --installer=pkg-system"
msgstr ""

#: ../../peps/pep-0376.rst:283
msgid "It defaults to ``distutils`` if not provided."
msgstr ""

#: ../../peps/pep-0376.rst:285
msgid ""
"When a distribution is installed, the INSTALLER file is generated in the "
"``.dist-info`` directory with this value, to keep track of **who** "
"installed the distribution. The file is a single-line text file."
msgstr ""

#: ../../peps/pep-0376.rst:291
msgid "REQUESTED"
msgstr ""

#: ../../peps/pep-0376.rst:293
msgid ""
"Some install tools automatically detect unfulfilled dependencies and "
"install them. In these cases, it is useful to track which distributions "
"were installed purely as a dependency, so if their dependent distribution"
" is later uninstalled, the user can be alerted of the orphaned "
"dependency."
msgstr ""

#: ../../peps/pep-0376.rst:299
msgid ""
"If a distribution is installed by direct user request (the usual case), a"
" file REQUESTED is added to the .dist-info directory of the installed "
"distribution. The REQUESTED file may be empty, or may contain a marker "
"comment line beginning with the \"#\" character."
msgstr ""

#: ../../peps/pep-0376.rst:304
msgid ""
"If an install tool installs a distribution automatically, as a dependency"
" of another distribution, the REQUESTED file should not be created."
msgstr ""

#: ../../peps/pep-0376.rst:308
msgid ""
"The ``install`` command of distutils by default creates the REQUESTED "
"file. It accepts ``--requested`` and ``--no-requested`` options to "
"explicitly specify whether the file is created."
msgstr ""

#: ../../peps/pep-0376.rst:312
msgid ""
"If a distribution that was already installed on the system as a "
"dependency is later installed by name, the distutils ``install`` command "
"will create the REQUESTED file in the .dist-info directory of the "
"existing installation."
msgstr ""

#: ../../peps/pep-0376.rst:319
msgid "Implementation details"
msgstr ""

#: ../../peps/pep-0376.rst:321
msgid ""
"Note: this section is non-normative.  In the end, this PEP was "
"implemented by third-party libraries and tools, not the standard library."
msgstr ""

#: ../../peps/pep-0376.rst:326
msgid "New functions and classes in pkgutil"
msgstr ""

#: ../../peps/pep-0376.rst:328
msgid ""
"To use the ``.dist-info`` directory content, we need to add in the "
"standard library a set of APIs. The best place to put these APIs is "
"``pkgutil``."
msgstr ""

#: ../../peps/pep-0376.rst:332
msgid "Functions"
msgstr ""

#: ../../peps/pep-0376.rst:334
msgid "The new functions added in the ``pkgutil`` module are :"
msgstr ""

#: ../../peps/pep-0376.rst:336
msgid "``distinfo_dirname(name, version)`` -> directory name"
msgstr ""

#: ../../peps/pep-0376.rst:338
msgid ""
"``name`` is converted to a standard distribution name by replacing any "
"runs of non-alphanumeric characters with a single '-'."
msgstr ""

#: ../../peps/pep-0376.rst:341
msgid ""
"``version`` is converted to a standard version string. Spaces become "
"dots, and all other non-alphanumeric characters (except dots) become "
"dashes, with runs of multiple dashes condensed to a single dash."
msgstr ""

#: ../../peps/pep-0376.rst:345
msgid ""
"Both attributes are then converted into their filename-escaped form, i.e."
" any '-' characters are replaced with '_' other than the one in 'dist-"
"info' and the one separating the name from the version number."
msgstr ""

#: ../../peps/pep-0376.rst:349
msgid "``get_distributions()`` -> iterator of ``Distribution`` instances."
msgstr ""

#: ../../peps/pep-0376.rst:351
msgid ""
"Provides an iterator that looks for ``.dist-info`` directories in "
"``sys.path`` and returns ``Distribution`` instances for each one of them."
msgstr ""

#: ../../peps/pep-0376.rst:355
msgid "``get_distribution(name)`` -> ``Distribution`` or None."
msgstr ""

#: ../../peps/pep-0376.rst:357
msgid ""
"``obsoletes_distribution(name, version=None)`` -> iterator of "
"``Distribution`` instances."
msgstr ""

#: ../../peps/pep-0376.rst:360
msgid ""
"Iterates over all distributions to find which distributions *obsolete* "
"``name``. If a ``version`` is provided, it will be used to filter the "
"results."
msgstr ""

#: ../../peps/pep-0376.rst:363
msgid ""
"``provides_distribution(name, version=None)`` -> iterator of "
"``Distribution`` instances."
msgstr ""

#: ../../peps/pep-0376.rst:366
msgid ""
"Iterates over all distributions to find which distributions *provide* "
"``name``. If a ``version`` is provided, it will be used to filter the "
"results. Scans all elements in ``sys.path`` and looks for all directories"
" ending with ``.dist-info``. Returns a ``Distribution`` corresponding to "
"the ``.dist-info`` directory that contains a METADATA that matches "
"``name`` for the ``name`` metadata."
msgstr ""

#: ../../peps/pep-0376.rst:373
msgid ""
"This function only returns the first result founded, since no more than "
"one values are expected. If the directory is not found, returns None."
msgstr ""

#: ../../peps/pep-0376.rst:376
msgid "``get_file_users(path)`` -> iterator of ``Distribution`` instances."
msgstr ""

#: ../../peps/pep-0376.rst:378
msgid ""
"Iterates over all distributions to find out which distributions uses "
"``path``. ``path`` can be a local absolute path or a relative "
"'/'-separated path."
msgstr ""

#: ../../peps/pep-0376.rst:381 ../../peps/pep-0376.rst:415
msgid ""
"A local absolute path is an absolute path in which occurrences of '/' "
"have been replaced by the system separator given by ``os.sep``."
msgstr ""

#: ../../peps/pep-0376.rst:386
msgid "Distribution class"
msgstr ""

#: ../../peps/pep-0376.rst:388
msgid ""
"A new class called ``Distribution`` is created with the path of the "
"``.dist-info`` directory provided to the constructor. It reads the "
"metadata contained in ``METADATA`` when it is instantiated."
msgstr ""

#: ../../peps/pep-0376.rst:392
msgid "``Distribution(path)`` -> instance"
msgstr ""

#: ../../peps/pep-0376.rst:394
msgid "Creates a ``Distribution`` instance for the given ``path``."
msgstr ""

#: ../../peps/pep-0376.rst:396
msgid "``Distribution`` provides the following attributes:"
msgstr ""

#: ../../peps/pep-0376.rst:398
msgid "``name``: The name of the distribution."
msgstr ""

#: ../../peps/pep-0376.rst:400
msgid ""
"``metadata``: A ``DistributionMetadata`` instance loaded with the "
"distribution's METADATA file."
msgstr ""

#: ../../peps/pep-0376.rst:403
msgid ""
"``requested``: A boolean that indicates whether the REQUESTED metadata "
"file is present (in other words, whether the distribution was installed "
"by user request)."
msgstr ""

#: ../../peps/pep-0376.rst:407
msgid "And following methods:"
msgstr ""

#: ../../peps/pep-0376.rst:409
msgid "``get_installed_files(local=False)`` -> iterator of (path, hash, size)"
msgstr ""

#: ../../peps/pep-0376.rst:411
msgid ""
"Iterates over the ``RECORD`` entries and return a tuple ``(path, hash, "
"size)`` for each line. If ``local`` is ``True``, the path is transformed "
"into a local absolute path. Otherwise the raw value from ``RECORD`` is "
"returned."
msgstr ""

#: ../../peps/pep-0376.rst:418
msgid "``uses(path)`` -> Boolean"
msgstr ""

#: ../../peps/pep-0376.rst:420
msgid ""
"Returns ``True`` if ``path`` is listed in ``RECORD``. ``path`` can be a "
"local absolute path or a relative '/'-separated path."
msgstr ""

#: ../../peps/pep-0376.rst:423
msgid "``get_distinfo_file(path, binary=False)`` -> file object"
msgstr ""

#: ../../peps/pep-0376.rst:425
msgid "Returns a file located under the ``.dist-info`` directory."
msgstr ""

#: ../../peps/pep-0376.rst:427
msgid "Returns a ``file`` instance for the file pointed by ``path``."
msgstr ""

#: ../../peps/pep-0376.rst:429
msgid ""
"``path`` has to be a '/'-separated path relative to the ``.dist-info`` "
"directory or an absolute path."
msgstr ""

#: ../../peps/pep-0376.rst:432
msgid ""
"If ``path`` is an absolute path and doesn't start with the ``.dist-info``"
" directory path, a ``DistutilsError`` is raised."
msgstr ""

#: ../../peps/pep-0376.rst:435
msgid ""
"If ``binary`` is ``True``, opens the file in read-only binary mode "
"(``rb``), otherwise opens it in read-only mode (``r``)."
msgstr ""

#: ../../peps/pep-0376.rst:438
msgid "``get_distinfo_files(local=False)`` -> iterator of paths"
msgstr ""

#: ../../peps/pep-0376.rst:440
msgid ""
"Iterates over the ``RECORD`` entries and returns paths for each line if "
"the path is pointing to a file located in the ``.dist-info`` directory or"
" one of its subdirectories."
msgstr ""

#: ../../peps/pep-0376.rst:444
msgid ""
"If ``local`` is ``True``, each path is transformed into a local absolute "
"path. Otherwise the raw value from ``RECORD`` is returned."
msgstr ""

#: ../../peps/pep-0376.rst:448
msgid ""
"Notice that the API is organized in five classes that work with "
"directories and Zip files (so it works with files included in Zip files, "
"see :pep:`273` for more details). These classes are described in the "
"documentation of the prototype implementation for interested readers "
"[#prototype]_."
msgstr ""

#: ../../peps/pep-0376.rst:454
msgid "Examples"
msgstr ""

#: ../../peps/pep-0376.rst:456
msgid "Let's use some of the new APIs with our ``docutils`` example::"
msgstr ""

#: ../../peps/pep-0376.rst:498
msgid "New functions in Distutils"
msgstr ""

#: ../../peps/pep-0376.rst:500
msgid ""
"Distutils already provides a very basic way to install a distribution, "
"which is running the ``install`` command over the ``setup.py`` script of "
"the distribution."
msgstr ""

#: ../../peps/pep-0376.rst:504
msgid ""
":pep:`Distutils2 <262>` will provide a very basic ``uninstall`` function,"
" that is added in ``distutils2.util`` and takes the name of the "
"distribution to uninstall as its argument. ``uninstall`` uses the APIs "
"described earlier and remove all unique files, as long as their hash "
"didn't change. Then it removes empty directories left behind."
msgstr ""

#: ../../peps/pep-0376.rst:510
msgid "``uninstall`` returns a list of uninstalled files::"
msgstr ""

#: ../../peps/pep-0376.rst:518
msgid "If the distribution is not found, a ``DistutilsUninstallError`` is raised."
msgstr ""

#: ../../peps/pep-0376.rst:521
msgid "Filtering"
msgstr ""

#: ../../peps/pep-0376.rst:523
msgid ""
"To make it a reference API for third-party projects that wish to control "
"how ``uninstall`` works, a second callable argument can be used. It's "
"called for each file that is removed. If the callable returns ``True``, "
"the file is removed. If it returns False, it's left alone."
msgstr ""

#: ../../peps/pep-0376.rst:528
msgid "Examples::"
msgstr ""

#: ../../peps/pep-0376.rst:542
msgid ""
"Of course, a third-party tool can use lower-level ``pkgutil`` APIs to "
"implement its own uninstall feature."
msgstr ""

#: ../../peps/pep-0376.rst:546
msgid "Installer marker"
msgstr ""

#: ../../peps/pep-0376.rst:548
msgid ""
"As explained earlier in this PEP, the ``install`` command adds an "
"``INSTALLER`` file in the ``.dist-info`` directory with the name of the "
"installer."
msgstr ""

#: ../../peps/pep-0376.rst:551
msgid ""
"To avoid removing distributions that were installed by another packaging "
"system, the ``uninstall`` function takes an extra argument ``installer`` "
"which defaults to ``distutils2``."
msgstr ""

#: ../../peps/pep-0376.rst:555
msgid ""
"When called, ``uninstall`` controls that the ``INSTALLER`` file matches "
"this argument. If not, it raises a ``DistutilsUninstallError``::"
msgstr ""

#: ../../peps/pep-0376.rst:565
msgid ""
"This allows a third-party application to use the ``uninstall`` function "
"and strongly suggest that no other program remove a distribution it has "
"previously installed. This is useful when a third-party program that "
"relies on Distutils APIs does extra steps on the system at installation "
"time, it has to undo at uninstallation time."
msgstr ""

#: ../../peps/pep-0376.rst:572
msgid "Adding an Uninstall script"
msgstr ""

#: ../../peps/pep-0376.rst:574
msgid "An ``uninstall`` script is added in Distutils2. and is used like this::"
msgstr ""

#: ../../peps/pep-0376.rst:578
msgid ""
"Notice that script doesn't control if the removal of a distribution "
"breaks another distribution. Although it makes sure that all the files it"
" removes are not used by any other distribution, by using the uninstall "
"function."
msgstr ""

#: ../../peps/pep-0376.rst:582
msgid ""
"Also note that this uninstall script pays no attention to the REQUESTED "
"metadata; that is provided only for use by external tools to provide more"
" advanced dependency management."
msgstr ""

#: ../../peps/pep-0376.rst:587
msgid "Backward compatibility and roadmap"
msgstr ""

#: ../../peps/pep-0376.rst:589
msgid ""
"These changes don't introduce any compatibility problems since they will "
"be implemented in:"
msgstr ""

#: ../../peps/pep-0376.rst:592
msgid "pkgutil in new functions"
msgstr ""

#: ../../peps/pep-0376.rst:593
msgid "distutils2"
msgstr ""

#: ../../peps/pep-0376.rst:595
msgid ""
"The plan is to include the functionality outlined in this PEP in pkgutil "
"for Python 3.2, and in Distutils2."
msgstr ""

#: ../../peps/pep-0376.rst:598
msgid ""
"Distutils2 will also contain a backport of the new pgkutil, and can be "
"used for 2.4 onward."
msgstr ""

#: ../../peps/pep-0376.rst:601
msgid ""
"Distributions installed using existing, pre-standardization formats do "
"not have the necessary metadata available for the new API, and thus will "
"be ignored. Third-party tools may of course to continue to support "
"previous formats in addition to the new format, in order to ease the "
"transition."
msgstr ""

#: ../../peps/pep-0376.rst:608
msgid "References"
msgstr "Referências"

#: ../../peps/pep-0376.rst:611
msgid "http://docs.python.org/distutils"
msgstr ""

#: ../../peps/pep-0376.rst:614
msgid "http://hg.python.org/distutils2"
msgstr ""

#: ../../peps/pep-0376.rst:617
msgid "http://peak.telecommunity.com/DevCenter/setuptools"
msgstr ""

#: ../../peps/pep-0376.rst:620
msgid "http://peak.telecommunity.com/DevCenter/EasyInstall"
msgstr ""

#: ../../peps/pep-0376.rst:623
msgid "http://pypi.python.org/pypi/pip"
msgstr ""

#: ../../peps/pep-0376.rst:626
msgid "http://peak.telecommunity.com/DevCenter/EggFormats"
msgstr ""

#: ../../peps/pep-0376.rst:629
msgid "http://fedoraproject.org/wiki/Packaging/Python/Eggs#Providing_Eggs_using_Setuptools"
msgstr ""

#: ../../peps/pep-0376.rst:632
msgid "http://wiki.debian.org/DebianPython/NewPolicy"
msgstr ""

#: ../../peps/pep-0376.rst:635
msgid "http://bitbucket.org/tarek/pep376/"
msgstr ""

#: ../../peps/pep-0376.rst:638
msgid "Acknowledgements"
msgstr ""

#: ../../peps/pep-0376.rst:640
msgid ""
"Jim Fulton, Ian Bicking, Phillip Eby, Rafael Villar Burke, and many "
"people at Pycon and Distutils-SIG."
msgstr ""

#: ../../peps/pep-0376.rst:644
msgid "Copyright"
msgstr "Copyright"

#: ../../peps/pep-0376.rst:646
msgid "This document has been placed in the public domain."
msgstr "Este documento foi colocado em domínio público."

#~ msgid ""
#~ "`22-Jun-2009 <https://mail.python.org/archives/list/python-"
#~ "dev@python.org/thread/ILLTIOZAULMDY5CAS6GOITEYJ4HNFATQ/#ILLTIOZAULMDY5CAS6GOITEYJ4HNFATQ>`__"
#~ msgstr ""

