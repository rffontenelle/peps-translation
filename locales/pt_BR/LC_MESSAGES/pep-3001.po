# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the PEPs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version:  PEPs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-20 10:43-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"

#: ../../peps/pep-3001.rst
msgid "Author"
msgstr "Autor"

#: ../../peps/pep-3001.rst:5
msgid "Georg Brandl <georg@python.org>"
msgstr ""

#: ../../peps/pep-3001.rst
msgid "Status"
msgstr "Status"

#: ../../peps/pep-3001.rst:6
msgid "Withdrawn"
msgstr ""

#: ../../peps/pep-3001.rst
msgid "Type"
msgstr "Tipo"

#: ../../peps/pep-3001.rst:7
msgid "Process"
msgstr "Processo"

#: ../../peps/pep-3001.rst
msgid "Created"
msgstr "Criada em"

#: ../../peps/pep-3001.rst:9
msgid "05-Apr-2006"
msgstr ""

#: ../../peps/pep-3001.rst
msgid "Post-History"
msgstr "Pós-história"

#: ../../peps/pep-3001.rst:14
msgid "Abstract"
msgstr ""

#: ../../peps/pep-3001.rst:16
msgid ""
"This PEP describes a procedure for reviewing and improving standard "
"library modules, especially those written in Python, making them ready "
"for Python 3000.  There can be different steps of refurbishing, each of "
"which is described in a section below.  Of course, not every step has to "
"be performed for every module."
msgstr ""

#: ../../peps/pep-3001.rst:24
msgid "Removal of obsolete modules"
msgstr ""

#: ../../peps/pep-3001.rst:26
msgid ""
"All modules marked as deprecated in 2.x versions should be removed for "
"Python 3000.  The same applies to modules which are seen as obsolete "
"today, but are too widely used to be deprecated or removed.  Python 3000 "
"is the big occasion to get rid of them."
msgstr ""

#: ../../peps/pep-3001.rst:31
msgid ""
"There will have to be a document listing all removed modules, together "
"with information on possible substitutes or alternatives.  This "
"information will also have to be provided by the python3warn.py porting "
"helper script mentioned in PEP XXX."
msgstr ""

#: ../../peps/pep-3001.rst:38
msgid "Renaming modules"
msgstr ""

#: ../../peps/pep-3001.rst:40
msgid ""
"There are proposals for a \"great stdlib renaming\" introducing a "
"hierarchic library namespace or a top-level package from which to import "
"standard modules.  That possibility aside, some modules' names are known "
"to have been chosen unwisely, a mistake which could never be corrected in"
" the 2.x series.  Examples are names like \"StringIO\" or \"Cookie\".  "
"For Python 3000, there will be the possibility to give those modules less"
" confusing and more conforming names."
msgstr ""

#: ../../peps/pep-3001.rst:48
msgid ""
"Of course, each rename will have to be stated in the documentation of the"
" respective module and perhaps in the global document of Step 1. "
"Additionally, the python3warn.py script will recognize the old module "
"names and notify the user accordingly."
msgstr ""

#: ../../peps/pep-3001.rst:53
msgid ""
"If the name change is made in time for another release of the Python 2.x "
"series, it is worth considering to introduce the new name in the 2.x "
"branch to ease transition."
msgstr ""

#: ../../peps/pep-3001.rst:59
msgid "Code cleanup"
msgstr ""

#: ../../peps/pep-3001.rst:61
msgid ""
"As most library modules written in Python have not been touched except "
"for bug fixes, following the policy of never changing a running system, "
"many of them may contain code that is not up to the newest language "
"features and could be rewritten in a more concise, modern Python."
msgstr ""

#: ../../peps/pep-3001.rst:66
msgid ""
"PyChecker should run cleanly over the library.  With a carefully tuned "
"configuration file, PyLint should also emit as few warnings as possible."
msgstr ""

#: ../../peps/pep-3001.rst:69
msgid ""
"As long as these changes don't change the module's interface and "
"behavior, no documentation updates are necessary."
msgstr ""

#: ../../peps/pep-3001.rst:74
msgid "Enhancement of test and documentation coverage"
msgstr ""

#: ../../peps/pep-3001.rst:76
msgid ""
"Code coverage by unit tests varies greatly between modules.  Each test "
"suite should be checked for completeness, and the remaining classic tests"
" should be converted to PyUnit (or whatever new shiny testing framework "
"comes with Python 3000, perhaps py.test?)."
msgstr ""

#: ../../peps/pep-3001.rst:81
msgid ""
"It should also be verified that each publicly visible function has a "
"meaningful docstring which ideally contains several doctests."
msgstr ""

#: ../../peps/pep-3001.rst:84
msgid "No documentation changes are necessary for enhancing test coverage."
msgstr ""

#: ../../peps/pep-3001.rst:88
msgid "Unification of module metadata"
msgstr ""

#: ../../peps/pep-3001.rst:90
msgid ""
"This is a small and probably not very important step.  There have been "
"various attempts at providing author, version and similar metadata in "
"modules (such as a \"__version__\" global).  Those could be standardized "
"and used throughout the library."
msgstr ""

#: ../../peps/pep-3001.rst:95
msgid "No documentation changes are necessary for this step, too."
msgstr ""

#: ../../peps/pep-3001.rst:99
msgid "Backwards incompatible bug fixes"
msgstr ""

#: ../../peps/pep-3001.rst:101
msgid ""
"Over the years, many bug reports have been filed which complained about "
"bugs in standard library modules, but have subsequently been closed as "
"\"Won't fix\" since a fix would have introduced a major incompatibility "
"which was not acceptable in the Python 2.x series.  In Python 3000, the "
"fix can be applied if the interface per se is still acceptable."
msgstr ""

#: ../../peps/pep-3001.rst:107
msgid ""
"Each slight behavioral change caused by such fixes must be mentioned in "
"the documentation, perhaps in a \"Changed in Version 3.0\" paragraph."
msgstr ""

#: ../../peps/pep-3001.rst:112
msgid "Interface changes"
msgstr ""

#: ../../peps/pep-3001.rst:114
msgid ""
"The last and most disruptive change is the overhaul of a module's public "
"interface.  If a module's interface is to be changed, a justification "
"should be made beforehand, or a PEP should be written."
msgstr ""

#: ../../peps/pep-3001.rst:118
msgid ""
"The change must be fully documented as \"New in Version 3.0\", and the "
"python3warn.py script must know about it."
msgstr ""

#: ../../peps/pep-3001.rst:123
msgid "References"
msgstr "Referências"

#: ../../peps/pep-3001.rst:125
msgid "None yet."
msgstr ""

#: ../../peps/pep-3001.rst:129
msgid "Copyright"
msgstr "Copyright"

#: ../../peps/pep-3001.rst:131
msgid "This document has been placed in the public domain."
msgstr "Este documento foi colocado em domínio público."

#~ msgid ""
#~ "There will have to be a document"
#~ " listing all removed modules, together "
#~ "with information on possible substitutes "
#~ "or alternatives.  This infor- mation "
#~ "will also have to be provided by"
#~ " the python3warn.py porting helper script"
#~ " mentioned in PEP XXX."
#~ msgstr ""

