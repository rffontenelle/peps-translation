# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the PEPs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version:  PEPs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-20 10:43-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"

#: ../../peps/pep-0390.rst
msgid "Author"
msgstr "Autor"

#: ../../peps/pep-0390.rst:5
msgid "Tarek Ziadé <tarek@ziade.org>"
msgstr ""

#: ../../peps/pep-0390.rst
msgid "BDFL-Delegate"
msgstr ""

#: ../../peps/pep-0390.rst:6
msgid "Alyssa Coghlan"
msgstr ""

#: ../../peps/pep-0390.rst
msgid "Discussions-To"
msgstr ""

#: ../../peps/pep-0390.rst:7
msgid "distutils-sig@python.org"
msgstr ""

#: ../../peps/pep-0390.rst
msgid "Status"
msgstr "Status"

#: ../../peps/pep-0390.rst:8
msgid "Rejected"
msgstr ""

#: ../../peps/pep-0390.rst
msgid "Type"
msgstr "Tipo"

#: ../../peps/pep-0390.rst:9
msgid "Standards Track"
msgstr ""

#: ../../peps/pep-0390.rst
msgid "Topic"
msgstr ""

#: ../../peps/pep-0390.rst:10
msgid "Packaging"
msgstr ""

#: ../../peps/pep-0390.rst
msgid "Created"
msgstr "Criada em"

#: ../../peps/pep-0390.rst:12
msgid "10-Oct-2009"
msgstr ""

#: ../../peps/pep-0390.rst
msgid "Python-Version"
msgstr ""

#: ../../peps/pep-0390.rst:13
msgid "2.7, 3.2"
msgstr ""

#: ../../peps/pep-0390.rst
msgid "Post-History"
msgstr "Pós-história"

#: ../../peps/pep-0390.rst
msgid "Resolution"
msgstr ""

#: ../../peps/pep-0390.rst:15
msgid "https://mail.python.org/pipermail/distutils-sig/2013-April/020597.html"
msgstr ""

#: ../../peps/pep-0390.rst:18
msgid "Abstract"
msgstr ""

#: ../../peps/pep-0390.rst:20
msgid ""
"This PEP describes a new section and a new format for the ``setup.cfg`` "
"file, that allows describing the Metadata of a package without using "
"``setup.py``."
msgstr ""

#: ../../peps/pep-0390.rst:25
msgid "Rejection Notice"
msgstr ""

#: ../../peps/pep-0390.rst:27
msgid ""
"As distutils2 is no longer going to be incorporated into the standard "
"library, this PEP was rejected by Alyssa Coghlan in late April, 2013."
msgstr ""

#: ../../peps/pep-0390.rst:30
msgid ""
"A replacement PEP based on :pep:`426` (metadata 2.0) will be created that"
" defines the minimum amount of information needed to generate an sdist "
"archive given a source tarball or VCS checkout."
msgstr ""

#: ../../peps/pep-0390.rst:36
msgid "Rationale"
msgstr ""

#: ../../peps/pep-0390.rst:38
msgid ""
"Today, if you want to list all the Metadata of a distribution (see "
":pep:`314`) that is not installed, you need to use the ``setup.py`` "
"command line interface."
msgstr ""

#: ../../peps/pep-0390.rst:41
msgid "So, basically, you download it, and run::"
msgstr ""

#: ../../peps/pep-0390.rst:49
msgid ""
"Where ``name`` and ``version`` are metadata fields. This is working fine "
"but as soon as the developers add more code in ``setup.py``, this feature"
" might break or in worst cases might do unwanted things on the target "
"system."
msgstr ""

#: ../../peps/pep-0390.rst:53
msgid ""
"Moreover, when an OS packager wants to get the metadata of a distribution"
" he is re-packaging, he might encounter some problems to understand the "
"``setup.py`` file he's working with."
msgstr ""

#: ../../peps/pep-0390.rst:57
msgid ""
"So the rationale of this PEP is to provide a way to declare the metadata "
"in a static configuration file alongside ``setup.py`` that doesn't "
"require any third party code to run."
msgstr ""

#: ../../peps/pep-0390.rst:63
msgid "Adding a ``metadata`` section in ``setup.cfg``"
msgstr ""

#: ../../peps/pep-0390.rst:65
msgid ""
"The first thing we want to introduce is a ``[metadata]`` section, in the "
"``setup.cfg`` file, that may contain any field from the Metadata::"
msgstr ""

#: ../../peps/pep-0390.rst:72
msgid ""
"The ``setup.cfg`` file is used to avoid adding yet another configuration "
"file to work with in Distutils."
msgstr ""

#: ../../peps/pep-0390.rst:75
msgid ""
"This file is already read by Distutils when a command is executed, and if"
" the ``metadata`` section is found, it will be used to fill the metadata "
"fields. If an option that corresponds to a Metadata field is given to "
"``setup()``, it will override the value that was possibly present in "
"``setup.cfg``."
msgstr ""

#: ../../peps/pep-0390.rst:81
msgid ""
"Notice that ``setup.py`` is still used and can be required to define some"
" options that are not part of the Metadata fields. For instance, the "
"``sdist`` command can use options like ``packages`` or ``scripts``."
msgstr ""

#: ../../peps/pep-0390.rst:87
msgid "Multi-lines values"
msgstr ""

#: ../../peps/pep-0390.rst:89
msgid ""
"Some Metadata fields can have multiple values. To keep ``setup.cfg`` "
"compatible with ``ConfigParser`` and the :rfc:`822` ``LONG HEADER "
"FIELDS`` (see section 3.1.1), these are expressed with ``,``-separated "
"values::"
msgstr ""

#: ../../peps/pep-0390.rst:95
msgid ""
"When this variable is read, the values are parsed and transformed into a "
"list: ``['pywin32', 'bar > 1.0', 'foo']``."
msgstr ""

#: ../../peps/pep-0390.rst:100
msgid "Context-dependant sections"
msgstr ""

#: ../../peps/pep-0390.rst:102
msgid ""
"The ``metadata`` section will also be able to use context-dependant "
"sections."
msgstr ""

#: ../../peps/pep-0390.rst:104
msgid ""
"A context-dependant section is a section with a condition about the "
"execution environment. Here's some examples::"
msgstr ""

#: ../../peps/pep-0390.rst:124
msgid ""
"Every ``[metadata:condition]`` section will be used only if the condition"
" is met when the file is read. The background motivation for these "
"context-dependant sections is to be able to define requirements that "
"varies depending on the platform the distribution might be installed on. "
"(see :pep:`314`)."
msgstr ""

#: ../../peps/pep-0390.rst:130
msgid ""
"The micro-language behind this is the simplest possible: it compares only"
" strings, with the ``==`` and ``in`` operators (and their opposites), and"
" with the ability to combine expressions. It makes it also easy to "
"understand to non-pythoneers."
msgstr ""

#: ../../peps/pep-0390.rst:135
msgid "The pseudo-grammar is ::"
msgstr ""

#: ../../peps/pep-0390.rst:139
msgid "where ``EXPR`` belongs to any of those:"
msgstr ""

#: ../../peps/pep-0390.rst:141
#, python-format
msgid "python_version = '%s.%s' % (sys.version_info[0], sys.version_info[1])"
msgstr ""

#: ../../peps/pep-0390.rst:142
msgid "os_name = os.name"
msgstr ""

#: ../../peps/pep-0390.rst:143
msgid "sys_platform = sys.platform"
msgstr ""

#: ../../peps/pep-0390.rst:144
msgid "platform_version = platform.version()"
msgstr ""

#: ../../peps/pep-0390.rst:145
msgid "platform_machine = platform.machine()"
msgstr ""

#: ../../peps/pep-0390.rst:146
msgid "a free string, like ``2.4``, or ``win32``"
msgstr ""

#: ../../peps/pep-0390.rst:148
msgid ""
"Notice that ``in`` is restricted to strings, meaning that it is not "
"possible to use other sequences like tuples or lists on the right side."
msgstr ""

#: ../../peps/pep-0390.rst:151
msgid ""
"Distutils will provide a function that is able to generate the metadata "
"of a distribution, given a ``setup.cfg`` file, for the execution "
"environment::"
msgstr ""

#: ../../peps/pep-0390.rst:158
msgid ""
"This means that a vanilla Python will be able to read the metadata of a "
"package without running any third party code."
msgstr ""

#: ../../peps/pep-0390.rst:161
msgid ""
"Notice that this feature is not restricted to the ``metadata`` namespace."
" Consequently, any other section can be extended with such context-"
"dependant sections."
msgstr ""

#: ../../peps/pep-0390.rst:166
msgid "Impact on PKG-INFO generation and PEP 314"
msgstr ""

#: ../../peps/pep-0390.rst:168
msgid ""
"When ``PKG-INFO`` is generated by Distutils, every field that relies on a"
" condition will have that condition written at the end of the line, after"
" a ``;`` separator::"
msgstr ""

#: ../../peps/pep-0390.rst:186
msgid ""
"Notice that this file can be opened with the ``DistributionMetadata`` "
"class. This class will be able to use the micro-language using the "
"execution environment."
msgstr ""

#: ../../peps/pep-0390.rst:190
msgid "Let's run in on a ``Python 2.5 i386 Linux``::"
msgstr ""

#: ../../peps/pep-0390.rst:197
msgid ""
"The execution environment can be overridden in case we want to get the "
"metadata for another environment::"
msgstr ""

#: ../../peps/pep-0390.rst:210
msgid ""
":pep:`314` is changed accordingly, meaning that each field will be able "
"to have that extra condition marker."
msgstr ""

#: ../../peps/pep-0390.rst:214
msgid "Compatibility"
msgstr ""

#: ../../peps/pep-0390.rst:216
msgid ""
"This change is based on a new metadata ``1.2`` format meaning that "
"Distutils will be able to distinguish old PKG-INFO files from new ones."
msgstr ""

#: ../../peps/pep-0390.rst:219
msgid ""
"The ``setup.cfg`` file change will stay ``ConfigParser``-compatible and "
"will not break existing ``setup.cfg`` files."
msgstr ""

#: ../../peps/pep-0390.rst:223
msgid "Limitations"
msgstr ""

#: ../../peps/pep-0390.rst:225
msgid ""
"We are not providing ``<`` and ``>`` operators at this time, and "
"``python_version`` is a regular string. This implies using ``or`` "
"operators when a section needs to be restricted to a couple of Python "
"versions. Although, if :pep:`386` is accepted, ``python_version`` could "
"be changed internally into something comparable with strings, and ``<`` "
"and ``>`` operators introduced."
msgstr ""

#: ../../peps/pep-0390.rst:232
msgid ""
"Last, if a distribution is unable to set all metadata fields in "
"``setup.cfg``, that's fine, the fields will be set to ``UNKNOWN`` when "
"``local_metadata`` is called. Getting ``UNKNOWN`` values will mean that "
"it might be necessary to run the ``setup.py`` command line interface to "
"get the whole set of metadata."
msgstr ""

#: ../../peps/pep-0390.rst:238
msgid "Acknowledgments"
msgstr ""

#: ../../peps/pep-0390.rst:240
msgid "The Distutils-SIG."
msgstr ""

#: ../../peps/pep-0390.rst:244
msgid "Copyright"
msgstr "Copyright"

#: ../../peps/pep-0390.rst:246
msgid "This document has been placed in the public domain."
msgstr "Este documento foi colocado em domínio público."

#~ msgid "Nick Coghlan"
#~ msgstr ""

#~ msgid ""
#~ "As distutils2 is no longer going "
#~ "to be incorporated into the standard "
#~ "library, this PEP was rejected by "
#~ "Nick Coghlan in late April, 2013."
#~ msgstr ""

#~ msgid ""
#~ "When ``PKG-INFO`` is generated by "
#~ "Distutils, every field that relies on"
#~ " a condition will have that condition"
#~ " written at the end of the "
#~ "line, after a `;` separator::"
#~ msgstr ""

