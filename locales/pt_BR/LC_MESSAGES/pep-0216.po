# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the PEPs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version:  PEPs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-07-14 02:33+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.15.0\n"

#: ../../peps/peps/pep-0216.rst
msgid "Author"
msgstr "Autor"

#: ../../peps/peps/pep-0216.rst:3
msgid "Moshe Zadka <moshez@zadka.site.co.il>"
msgstr ""

#: ../../peps/peps/pep-0216.rst
msgid "Status"
msgstr "Status"

#: ../../peps/peps/pep-0216.rst:4
msgid "Withdrawn"
msgstr ""

#: ../../peps/peps/pep-0216.rst
msgid "Type"
msgstr "Tipo"

#: ../../peps/peps/pep-0216.rst:5
msgid "Informational"
msgstr ""

#: ../../peps/peps/pep-0216.rst
msgid "Created"
msgstr "Criada em"

#: ../../peps/peps/pep-0216.rst:6
msgid "31-Jul-2000"
msgstr ""

#: ../../peps/peps/pep-0216.rst
msgid "Post-History"
msgstr "Pós-história"

#: ../../peps/peps/pep-0216.rst
msgid "Superseded-By"
msgstr ""

#: ../../peps/peps/pep-0216.rst:8
msgid "287"
msgstr ""

#: ../../peps/peps/pep-0216.rst:13
msgid "It has been superseded by :pep:`287`."
msgstr ""

#: ../../peps/peps/pep-0216.rst:17
msgid "Abstract"
msgstr ""

#: ../../peps/peps/pep-0216.rst:19
msgid ""
"Named Python objects, such as modules, classes and functions, have a string "
"attribute called ``__doc__``. If the first expression inside the definition "
"is a literal string, that string is assigned to the ``__doc__`` attribute."
msgstr ""

#: ../../peps/peps/pep-0216.rst:24
msgid ""
"The ``__doc__`` attribute is called a documentation string, or docstring. It "
"is often used to summarize the interface of the module, class or function. "
"However, since there is no common format for documentation string, tools for "
"extracting docstrings and transforming those into documentation in a "
"standard format (e.g., DocBook) have not sprang up in abundance, and those "
"that do exist are for the most part unmaintained and unused."
msgstr ""

#: ../../peps/peps/pep-0216.rst:34
msgid "Perl Documentation"
msgstr ""

#: ../../peps/peps/pep-0216.rst:36
msgid ""
"In Perl, most modules are documented in a format called POD -- Plain Old "
"Documentation. This is an easy-to-type, very low level format which "
"integrates well with the Perl parser. Many tools exist to turn POD "
"documentation into other formats: info, HTML and man pages, among others. "
"However, in Perl, the information is not available at run-time."
msgstr ""

#: ../../peps/peps/pep-0216.rst:44
msgid "Java Documentation"
msgstr ""

#: ../../peps/peps/pep-0216.rst:46
msgid ""
"In Java, special comments before classes and functions function to document "
"the code. A program to extract these, and turn them into HTML documentation "
"is called javadoc, and is part of the standard Java distribution. However, "
"the only output format that is supported is HTML, and JavaDoc has a very "
"intimate relationship with HTML."
msgstr ""

#: ../../peps/peps/pep-0216.rst:54
msgid "Python Docstring Goals"
msgstr ""

#: ../../peps/peps/pep-0216.rst:56
msgid ""
"Python documentation string are easy to spot during parsing, and are also "
"available to the runtime interpreter. This double purpose is a bit "
"problematic, sometimes: for example, some are reluctant to have too long "
"docstrings, because they do not want to take much space in the runtime. In "
"addition, because of the current lack of tools, people read objects' "
"docstrings by \"print\"ing them, so a tendency to make them brief and free "
"of markups has sprung up. This tendency hinders writing better documentation-"
"extraction tools, since it causes docstrings to contain little information, "
"which is hard to parse."
msgstr ""

#: ../../peps/peps/pep-0216.rst:68
msgid "High Level Solutions"
msgstr ""

#: ../../peps/peps/pep-0216.rst:70
msgid ""
"To counter the objection that the strings take up place in the running "
"program, it is suggested that documentation extraction tools will "
"concatenate a maximum prefix of string literals which appear in the "
"beginning of a definition. The first of these will also be available in the "
"interactive interpreter, so it should contain a few summary lines."
msgstr ""

#: ../../peps/peps/pep-0216.rst:79
msgid "Docstring Format Goals"
msgstr ""

#: ../../peps/peps/pep-0216.rst:81
msgid ""
"These are the goals for the docstring format, as discussed ad nauseam in the "
"doc-sig."
msgstr ""

#: ../../peps/peps/pep-0216.rst:84
msgid "It must be easy to type with any standard text editor."
msgstr ""

#: ../../peps/peps/pep-0216.rst:85
msgid "It must be readable to the casual observer."
msgstr ""

#: ../../peps/peps/pep-0216.rst:86
msgid ""
"It must not contain information which can be deduced from parsing the module."
msgstr ""

#: ../../peps/peps/pep-0216.rst:88
msgid ""
"It must contain sufficient information so it can be converted to any "
"reasonable markup format."
msgstr ""

#: ../../peps/peps/pep-0216.rst:90
msgid ""
"It must be possible to write a module's entire documentation in docstrings, "
"without feeling hampered by the markup language."
msgstr ""

#: ../../peps/peps/pep-0216.rst:95
msgid "Docstring Contents"
msgstr ""

#: ../../peps/peps/pep-0216.rst:97
msgid ""
"For requirement 5. above, it is needed to specify what must be in docstrings."
msgstr ""

#: ../../peps/peps/pep-0216.rst:100
msgid "At least the following must be available:"
msgstr ""

#: ../../peps/peps/pep-0216.rst:102
msgid "A tag that means \"this is a Python *something*, guess what\""
msgstr ""

#: ../../peps/peps/pep-0216.rst:104
msgid ""
"Example: In the sentence \"The POP3 class\", we need to markup \"POP3\" so. "
"The parser will be able to guess it is a class from the contents of the "
"``poplib`` module, but we need to make it guess."
msgstr ""

#: ../../peps/peps/pep-0216.rst:108
msgid ""
"Tags that mean \"this is a Python class/module/class var/instance var...\""
msgstr ""

#: ../../peps/peps/pep-0216.rst:110
msgid ""
"Example: The usual Python idiom for singleton class ``A`` is to have ``_A`` "
"as the class, and ``A`` a function which returns ``_A`` objects. It's usual "
"to document the class, nonetheless, as being ``A``. This requires the "
"strength to say \"The class ``A``\" and have ``A`` hyperlinked and marked-up "
"as a class."
msgstr ""

#: ../../peps/peps/pep-0216.rst:116
msgid "An easy way to include Python source code/Python interactive sessions"
msgstr ""

#: ../../peps/peps/pep-0216.rst:118
msgid "Emphasis/bold"
msgstr ""

#: ../../peps/peps/pep-0216.rst:120
msgid "List/tables"
msgstr ""

#: ../../peps/peps/pep-0216.rst:124
msgid "Docstring Basic Structure"
msgstr ""

#: ../../peps/peps/pep-0216.rst:126
msgid ""
"The documentation strings will be in StructuredTextNG (http://www.zope.org/"
"Members/jim/StructuredTextWiki/StructuredTextNG) Since StructuredText is not "
"yet strong enough to handle (a) and (b) above, we will need to extend it. I "
"suggest using ``[<optional description>:python identifier]``. E.g.: ``[class:"
"POP3]``, ``[:POP3.list]``, etc. If the description is missing, a guess will "
"be made from the text."
msgstr ""

#: ../../peps/peps/pep-0216.rst:136
msgid "Unresolved Issues"
msgstr ""

#: ../../peps/peps/pep-0216.rst:138
msgid ""
"Is there a way to escape characters in ST? If so, how? (example: * at the "
"beginning of a line without being bullet symbol)"
msgstr ""

#: ../../peps/peps/pep-0216.rst:141
msgid ""
"Is my suggestion above for Python symbols compatible with ST-NG? How hard "
"would it be to extend ST-NG to support it?"
msgstr ""

#: ../../peps/peps/pep-0216.rst:144
msgid "How do we describe input and output types of functions?"
msgstr ""

#: ../../peps/peps/pep-0216.rst:146
msgid ""
"What additional constraint do we enforce on each docstring? (module/class/"
"function)?"
msgstr ""

#: ../../peps/peps/pep-0216.rst:149
msgid "What are the guesser rules?"
msgstr ""

#: ../../peps/peps/pep-0216.rst:153
msgid "Rejected Suggestions"
msgstr ""

#: ../../peps/peps/pep-0216.rst:155
msgid ""
"XML -- it's very hard to type, and too cluttered to read it comfortably."
msgstr ""
