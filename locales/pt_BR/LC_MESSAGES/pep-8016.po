# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the PEPs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version:  PEPs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-20 10:43-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"

#: ../../peps/pep-8016.rst
msgid "Author"
msgstr "Autor"

#: ../../peps/pep-8016.rst:3
msgid "Nathaniel J. Smith, Donald Stufft"
msgstr ""

#: ../../peps/pep-8016.rst
msgid "Status"
msgstr "Status"

#: ../../peps/pep-8016.rst:4
msgid "Accepted"
msgstr ""

#: ../../peps/pep-8016.rst
msgid "Type"
msgstr "Tipo"

#: ../../peps/pep-8016.rst:5
msgid "Informational"
msgstr ""

#: ../../peps/pep-8016.rst
msgid "Topic"
msgstr ""

#: ../../peps/pep-8016.rst:6
msgid "Governance"
msgstr ""

#: ../../peps/pep-8016.rst
msgid "Created"
msgstr "Criada em"

#: ../../peps/pep-8016.rst:8
msgid "01-Nov-2018"
msgstr ""

#: ../../peps/pep-8016.rst:11
msgid "Note"
msgstr ""

#: ../../peps/pep-8016.rst:13
msgid ""
"This PEP is retained for historical purposes, but the official governance"
" document is now :pep:`13`."
msgstr ""

#: ../../peps/pep-8016.rst:18
msgid "Abstract"
msgstr ""

#: ../../peps/pep-8016.rst:20
msgid ""
"This PEP proposes a model of Python governance based around a steering "
"council. The council has broad authority, which they seek to exercise as "
"rarely as possible; instead, they use this power to establish standard "
"processes, like those proposed in the other 801x-series PEPs. This "
"follows the general philosophy that it's better to split up large changes"
" into a series of small changes that can be reviewed independently: "
"instead of trying to do everything in one PEP, we focus on providing a "
"minimal-but-solid foundation for further governance decisions."
msgstr ""

#: ../../peps/pep-8016.rst:32
msgid "PEP Acceptance"
msgstr ""

#: ../../peps/pep-8016.rst:34
msgid ""
":pep:`8016` was accepted `by a core developer vote "
"<https://discuss.python.org/t/python-governance-vote-"
"december-2018-results/546/>`__ described in :pep:`8001` on Monday, "
"December 17, 2018."
msgstr ""

#: ../../peps/pep-8016.rst:40
msgid "Rationale"
msgstr ""

#: ../../peps/pep-8016.rst:42
msgid "The main goals of this proposal are:"
msgstr ""

#: ../../peps/pep-8016.rst:44
msgid ""
"Be **boring**: We're not experts in governance, and we don't think Python"
" is a good place to experiment with new and untried governance models. So"
" this proposal sticks to mature, well-known, previously tested processes "
"as much as possible. The high-level approach of a mostly-hands-off "
"council is arguably the most common across large successful F/OSS "
"projects, and low-level details are derived directly from Django's "
"governance."
msgstr ""

#: ../../peps/pep-8016.rst:51
msgid ""
"Be **simple**: We've attempted to pare things down to the minimum needed "
"to make this workable: the council, the core team (who elect the "
"council), and the process for changing the document. The goal is Minimum "
"Viable Governance."
msgstr ""

#: ../../peps/pep-8016.rst:55
msgid ""
"Be **comprehensive**: But for the things we need to define, we've tried "
"to make sure to cover all the bases, because we don't want to go through "
"this kind of crisis again. Having a clear and unambiguous set of rules "
"also helps minimize confusion and resentment."
msgstr ""

#: ../../peps/pep-8016.rst:59
msgid ""
"Be **flexible and light-weight**: We know that it will take time and "
"experimentation to find the best processes for working together. By "
"keeping this document as minimal as possible, we keep maximal flexibility"
" for adjusting things later, while minimizing the need for heavy-weight "
"and anxiety-provoking processes like whole-project votes."
msgstr ""

#: ../../peps/pep-8016.rst:66
msgid ""
"A number of details were discussed in `this Discourse thread "
"<https://discuss.python.org/t/working-discussion-for-pep-8016-the-"
"boringest-possible-steering-council-model/333/>`__, and then `this thread"
" has further discussion <https://discuss.python.org/t/pep-8016-the-"
"steering-council-model/394>`__. These may be useful to anyone trying to "
"understand the rationale for various minor decisions."
msgstr ""

#: ../../peps/pep-8016.rst:75
msgid "Specification"
msgstr ""

#: ../../peps/pep-8016.rst:78
msgid "The steering council"
msgstr ""

#: ../../peps/pep-8016.rst:81
msgid "Composition"
msgstr ""

#: ../../peps/pep-8016.rst:83
msgid "The steering council is a 5-person committee."
msgstr ""

#: ../../peps/pep-8016.rst:87
msgid "Mandate"
msgstr ""

#: ../../peps/pep-8016.rst:89
msgid "The steering council shall work to:"
msgstr ""

#: ../../peps/pep-8016.rst:91
msgid ""
"Maintain the quality and stability of the Python language and CPython "
"interpreter,"
msgstr ""

#: ../../peps/pep-8016.rst:93
msgid "Make contributing as accessible, inclusive, and sustainable as possible,"
msgstr ""

#: ../../peps/pep-8016.rst:95
msgid "Formalize and maintain the relationship between the core team and the PSF,"
msgstr ""

#: ../../peps/pep-8016.rst:97
msgid "Establish appropriate decision-making processes for PEPs,"
msgstr ""

#: ../../peps/pep-8016.rst:98
msgid ""
"Seek consensus among contributors and the core team before acting in a "
"formal capacity,"
msgstr ""

#: ../../peps/pep-8016.rst:100
msgid ""
"Act as a \"court of final appeal\" for decisions where all other methods "
"have failed."
msgstr ""

#: ../../peps/pep-8016.rst:105
msgid "Powers"
msgstr ""

#: ../../peps/pep-8016.rst:107
msgid ""
"The council has broad authority to make decisions about the project. For "
"example, they can:"
msgstr ""

#: ../../peps/pep-8016.rst:110
msgid "Accept or reject PEPs"
msgstr ""

#: ../../peps/pep-8016.rst:111
msgid "Enforce or update the project's code of conduct"
msgstr ""

#: ../../peps/pep-8016.rst:112
msgid "Work with the PSF to manage any project assets"
msgstr ""

#: ../../peps/pep-8016.rst:113
msgid "Delegate parts of their authority to other subcommittees or processes"
msgstr ""

#: ../../peps/pep-8016.rst:116
msgid ""
"However, they cannot modify this PEP, or affect the membership of the "
"core team, except via the mechanisms specified in this PEP."
msgstr ""

#: ../../peps/pep-8016.rst:119
msgid ""
"The council should look for ways to use these powers as little as "
"possible. Instead of voting, it's better to seek consensus. Instead of "
"ruling on individual PEPs, it's better to define a standard process for "
"PEP decision making (for example, by accepting one of the other 801x "
"series of PEPs). It's better to establish a Code of Conduct committee "
"than to rule on individual cases. And so on."
msgstr ""

#: ../../peps/pep-8016.rst:126
msgid ""
"To use its powers, the council votes. Every council member must either "
"vote or explicitly abstain. Members with conflicts of interest on a "
"particular vote must abstain. Passing requires support from a majority of"
" non-abstaining council members."
msgstr ""

#: ../../peps/pep-8016.rst:131
msgid ""
"Whenever possible, the council's deliberations and votes shall be held in"
" public."
msgstr ""

#: ../../peps/pep-8016.rst:136
msgid "Electing the council"
msgstr ""

#: ../../peps/pep-8016.rst:138
msgid "A council election consists of two phases:"
msgstr ""

#: ../../peps/pep-8016.rst:140
msgid ""
"Phase 1: Candidates advertise their interest in serving. Candidates must "
"be nominated by a core team member. Self-nominations are allowed."
msgstr ""

#: ../../peps/pep-8016.rst:144
msgid ""
"Phase 2: Each core team member can vote for zero to five of the "
"candidates. Voting is performed anonymously. Candidates are ranked by the"
" total number of votes they receive. If a tie occurs, it may be resolved "
"by mutual agreement among the candidates, or else the winner will be "
"chosen at random."
msgstr ""

#: ../../peps/pep-8016.rst:150
msgid ""
"Each phase lasts one to two weeks, at the outgoing council's discretion. "
"For the initial election, both phases will last two weeks."
msgstr ""

#: ../../peps/pep-8016.rst:153
msgid ""
"The election process is managed by a returns officer nominated by the "
"outgoing steering council. For the initial election, the returns officer "
"will be nominated by the PSF Executive Director."
msgstr ""

#: ../../peps/pep-8016.rst:157
msgid ""
"The council should ideally reflect the diversity of Python contributors "
"and users, and core team members are encouraged to vote accordingly."
msgstr ""

#: ../../peps/pep-8016.rst:163
msgid "Term"
msgstr ""

#: ../../peps/pep-8016.rst:165
msgid ""
"A new council is elected after each feature release. Each council's term "
"runs from when their election results are finalized until the next "
"council's term starts. There are no term limits."
msgstr ""

#: ../../peps/pep-8016.rst:171
msgid "Vacancies"
msgstr ""

#: ../../peps/pep-8016.rst:173
msgid "Council members may resign their position at any time."
msgstr ""

#: ../../peps/pep-8016.rst:175
msgid ""
"Whenever there is a vacancy during the regular council term, the council "
"may vote to appoint a replacement to serve out the rest of the term."
msgstr ""

#: ../../peps/pep-8016.rst:179
msgid ""
"If a council member drops out of touch and cannot be contacted for a "
"month or longer, then the rest of the council may vote to replace them."
msgstr ""

#: ../../peps/pep-8016.rst:185
msgid "Conflicts of interest"
msgstr ""

#: ../../peps/pep-8016.rst:187
msgid ""
"While we trust council members to act in the best interests of Python "
"rather than themselves or their employers, the mere appearance of any one"
" company dominating Python development could itself be harmful and erode "
"trust. In order to avoid any appearance of conflict of interest, at most "
"2 members of the council can work for any single employer."
msgstr ""

#: ../../peps/pep-8016.rst:193
msgid ""
"In a council election, if 3 of the top 5 vote-getters work for the same "
"employer, then whichever of them ranked lowest is disqualified and the "
"6th-ranking candidate moves up into 5th place; this is repeated until a "
"valid council is formed."
msgstr ""

#: ../../peps/pep-8016.rst:198
msgid ""
"During a council term, if changing circumstances cause this rule to be "
"broken (for instance, due to a council member changing employment), then "
"one or more council members must resign to remedy the issue, and the "
"resulting vacancies can then be filled as normal."
msgstr ""

#: ../../peps/pep-8016.rst:205
msgid "Ejecting core team members"
msgstr ""

#: ../../peps/pep-8016.rst:207
msgid ""
"In exceptional circumstances, it may be necessary to remove someone from "
"the core team against their will. (For example: egregious and ongoing "
"code of conduct violations.) This can be accomplished by a steering "
"council vote, but unlike other steering council votes, this requires at "
"least a two-thirds majority. With 5 members voting, this means that a 3:2"
" vote is insufficient; 4:1 in favor is the minimum required for such a "
"vote to succeed. In addition, this is the one power of the steering "
"council which cannot be delegated, and this power cannot be used while a "
"vote of no confidence is in process."
msgstr ""

#: ../../peps/pep-8016.rst:217
msgid ""
"If the ejected core team member is also on the steering council, then "
"they are removed from the steering council as well."
msgstr ""

#: ../../peps/pep-8016.rst:222
msgid "Vote of no confidence"
msgstr ""

#: ../../peps/pep-8016.rst:224
msgid ""
"In exceptional circumstances, the core team may remove a sitting council "
"member, or the entire council, via a vote of no confidence."
msgstr ""

#: ../../peps/pep-8016.rst:227
msgid ""
"A no-confidence vote is triggered when a core team member calls for one "
"publicly on an appropriate project communication channel, and another "
"core team member seconds the proposal."
msgstr ""

#: ../../peps/pep-8016.rst:231
msgid ""
"The vote lasts for two weeks. Core team members vote for or against. If "
"at least two thirds of voters express a lack of confidence, then the vote"
" succeeds."
msgstr ""

#: ../../peps/pep-8016.rst:235
msgid ""
"There are two forms of no-confidence votes: those targeting a single "
"member, and those targeting the council as a whole. The initial call for "
"a no-confidence vote must specify which type is intended. If a single-"
"member vote succeeds, then that member is removed from the council and "
"the resulting vacancy can be handled in the usual way. If a whole-council"
" vote succeeds, the council is dissolved and a new council election is "
"triggered immediately."
msgstr ""

#: ../../peps/pep-8016.rst:245
msgid "The core team"
msgstr ""

#: ../../peps/pep-8016.rst:248
msgid "Role"
msgstr ""

#: ../../peps/pep-8016.rst:250
msgid ""
"The core team is the group of trusted volunteers who manage Python. They "
"assume many roles required to achieve the project's goals, especially "
"those that require a high level of trust. They make the decisions that "
"shape the future of the project."
msgstr ""

#: ../../peps/pep-8016.rst:255
msgid ""
"Core team members are expected to act as role models for the community "
"and custodians of the project, on behalf of the community and all those "
"who rely on Python."
msgstr ""

#: ../../peps/pep-8016.rst:259
msgid ""
"They will intervene, where necessary, in online discussions or at "
"official Python events on the rare occasions that a situation arises that"
" requires intervention."
msgstr ""

#: ../../peps/pep-8016.rst:263
msgid ""
"They have authority over the Python Project infrastructure, including the"
" Python Project website itself, the Python GitHub organization and "
"repositories, the bug tracker, the mailing lists, IRC channels, etc."
msgstr ""

#: ../../peps/pep-8016.rst:269
msgid "Prerogatives"
msgstr ""

#: ../../peps/pep-8016.rst:271
msgid ""
"Core team members may participate in formal votes, typically to nominate "
"new team members and to elect the steering council."
msgstr ""

#: ../../peps/pep-8016.rst:276
msgid "Membership"
msgstr ""

#: ../../peps/pep-8016.rst:278
msgid "Python core team members demonstrate:"
msgstr ""

#: ../../peps/pep-8016.rst:280
msgid "a good grasp of the philosophy of the Python Project"
msgstr ""

#: ../../peps/pep-8016.rst:281
msgid "a solid track record of being constructive and helpful"
msgstr ""

#: ../../peps/pep-8016.rst:282
msgid "significant contributions to the project's goals, in any form"
msgstr ""

#: ../../peps/pep-8016.rst:283
msgid "willingness to dedicate some time to improving Python"
msgstr ""

#: ../../peps/pep-8016.rst:285
msgid ""
"As the project matures, contributions go beyond code. Here's an "
"incomplete list of areas where contributions may be considered for "
"joining the core team, in no particular order:"
msgstr ""

#: ../../peps/pep-8016.rst:289
msgid "Working on community management and outreach"
msgstr ""

#: ../../peps/pep-8016.rst:290
msgid "Providing support on the mailing lists and on IRC"
msgstr ""

#: ../../peps/pep-8016.rst:291
msgid "Triaging tickets"
msgstr ""

#: ../../peps/pep-8016.rst:292
msgid "Writing patches (code, docs, or tests)"
msgstr ""

#: ../../peps/pep-8016.rst:293
msgid "Reviewing patches (code, docs, or tests)"
msgstr ""

#: ../../peps/pep-8016.rst:294
msgid "Participating in design decisions"
msgstr ""

#: ../../peps/pep-8016.rst:295
msgid "Providing expertise in a particular domain (security, i18n, etc.)"
msgstr ""

#: ../../peps/pep-8016.rst:296
msgid "Managing the continuous integration infrastructure"
msgstr ""

#: ../../peps/pep-8016.rst:297
msgid "Managing the servers (website, tracker, documentation, etc.)"
msgstr ""

#: ../../peps/pep-8016.rst:298
msgid ""
"Maintaining related projects (alternative interpreters, core "
"infrastructure like packaging, etc.)"
msgstr ""

#: ../../peps/pep-8016.rst:300
msgid "Creating visual designs"
msgstr ""

#: ../../peps/pep-8016.rst:302
msgid ""
"Core team membership acknowledges sustained and valuable efforts that "
"align well with the philosophy and the goals of the Python project."
msgstr ""

#: ../../peps/pep-8016.rst:305
msgid ""
"It is granted by receiving at least two-thirds positive votes in a core "
"team vote and no veto by the steering council."
msgstr ""

#: ../../peps/pep-8016.rst:308
msgid ""
"Core team members are always looking for promising contributors, teaching"
" them how the project is managed, and submitting their names to the core "
"team's vote when they're ready."
msgstr ""

#: ../../peps/pep-8016.rst:312
msgid ""
"There's no time limit on core team membership. However, in order to "
"provide the general public with a reasonable idea of how many people "
"maintain Python, core team members who have stopped contributing are "
"encouraged to declare themselves as \"inactive\". Those who haven't made "
"any non-trivial contribution in two years may be asked to move themselves"
" to this category, and moved there if they don't respond. To record and "
"honor their contributions, inactive team members will continue to be "
"listed alongside active core team members; and, if they later resume "
"contributing, they can switch back to active status at will. While "
"someone is in inactive status, though, they lose their active privileges "
"like voting or nominating for the steering council, and commit access."
msgstr ""

#: ../../peps/pep-8016.rst:325
msgid ""
"The initial active core team members will consist of everyone currently "
"listed in the `\"Python core\" team on GitHub "
"<https://github.com/orgs/python/teams/python-core/members>`__, and the "
"initial inactive members will consist of everyone else who has been a "
"committer in the past."
msgstr ""

#: ../../peps/pep-8016.rst:333
msgid "Changing this document"
msgstr ""

#: ../../peps/pep-8016.rst:335
msgid ""
"Changes to this document require at least a two-thirds majority of votes "
"cast in a core team vote."
msgstr ""

#: ../../peps/pep-8016.rst:340
msgid "TODO"
msgstr ""

#: ../../peps/pep-8016.rst:342
msgid ""
"Lots of people contributed helpful suggestions and feedback; we should "
"check if they're comfortable being added as co-authors"
msgstr ""

#: ../../peps/pep-8016.rst:345
msgid ""
"It looks like Aymeric Augustin wrote the whole Django doc, so presumably "
"holds copyright; maybe we should ask him if he's willing to release it "
"into the public domain so our copyright statement below can be simpler."
msgstr ""

#: ../../peps/pep-8016.rst:352
msgid "Acknowledgements"
msgstr ""

#: ../../peps/pep-8016.rst:354
msgid ""
"Substantial text was copied shamelessly from `The Django project's "
"governance document "
"<https://docs.djangoproject.com/en/dev/internals/organization/>`__."
msgstr ""

#: ../../peps/pep-8016.rst:360
msgid "Copyright"
msgstr "Copyright"

#: ../../peps/pep-8016.rst:362
msgid ""
"Text copied from Django used under `their license "
"<https://github.com/django/django/blob/main/LICENSE>`__. The rest of this"
" document has been placed in the public domain."
msgstr ""

#~ msgid ""
#~ "The initial active core team members "
#~ "will consist of everyone currently "
#~ "listed in the `\"Python core\" team "
#~ "on Github <https://github.com/orgs/python/teams/python-"
#~ "core/members>`__, and the initial inactive "
#~ "members will consist of everyone else"
#~ " who has been a committer in "
#~ "the past."
#~ msgstr ""

