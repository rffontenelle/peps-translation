# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the PEPs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version:  PEPs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-20 10:43-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"

#: ../../peps/pep-0535.rst
msgid "Author"
msgstr "Autor"

#: ../../peps/pep-0535.rst:5
msgid "Alyssa Coghlan <ncoghlan@gmail.com>"
msgstr ""

#: ../../peps/pep-0535.rst
msgid "Status"
msgstr "Status"

#: ../../peps/pep-0535.rst:6
msgid "Deferred"
msgstr ""

#: ../../peps/pep-0535.rst
msgid "Type"
msgstr "Tipo"

#: ../../peps/pep-0535.rst:7
msgid "Standards Track"
msgstr ""

#: ../../peps/pep-0535.rst
msgid "Requires"
msgstr ""

#: ../../peps/pep-0535.rst:9
msgid "532"
msgstr ""

#: ../../peps/pep-0535.rst
msgid "Created"
msgstr "Criada em"

#: ../../peps/pep-0535.rst:10
msgid "12-Nov-2016"
msgstr ""

#: ../../peps/pep-0535.rst
msgid "Python-Version"
msgstr ""

#: ../../peps/pep-0535.rst:11
msgid "3.8"
msgstr ""

#: ../../peps/pep-0535.rst:14
msgid "PEP Deferral"
msgstr ""

#: ../../peps/pep-0535.rst:16
msgid ""
"Further consideration of this PEP has been deferred until Python 3.8 at "
"the earliest."
msgstr ""

#: ../../peps/pep-0535.rst:21
msgid "Abstract"
msgstr ""

#: ../../peps/pep-0535.rst:23
msgid ""
"Inspired by :pep:`335`, and building on the circuit breaking protocol "
"described in :pep:`532`, this PEP proposes a change to the definition of "
"chained comparisons, where the comparison chaining will be updated to use"
" the left-associative circuit breaking operator (``else``) rather than "
"the logical disjunction operator  (``and``) if the left hand comparison "
"returns a circuit breaker as its result."
msgstr ""

#: ../../peps/pep-0535.rst:30
msgid ""
"While there are some practical complexities arising from the current "
"handling of single-valued arrays in NumPy, this change should be "
"sufficient to allow elementwise chained comparison operations for "
"matrices, where the result is a matrix of boolean values, rather than "
"raising ``ValueError`` or tautologically returning ``True`` (indicating a"
" non-empty matrix)."
msgstr ""

#: ../../peps/pep-0535.rst:38
msgid "Relationship with other PEPs"
msgstr ""

#: ../../peps/pep-0535.rst:40
msgid ""
"This PEP has been extracted from earlier iterations of :pep:`532`, as a "
"follow-on use case for the circuit breaking protocol, rather than an "
"essential part of its introduction."
msgstr ""

#: ../../peps/pep-0535.rst:44
msgid ""
"The specific proposal in this PEP to handle the element-wise comparison "
"use case by changing the semantic definition of comparison chaining is "
"drawn directly from Guido's rejection of :pep:`335`."
msgstr ""

#: ../../peps/pep-0535.rst:50
msgid "Specification"
msgstr ""

#: ../../peps/pep-0535.rst:52
msgid "A chained comparison like ``0 < x < 10`` written as::"
msgstr ""

#: ../../peps/pep-0535.rst:56
msgid "is currently roughly semantically equivalent to::"
msgstr ""

#: ../../peps/pep-0535.rst:62
msgid ""
"Using the circuit breaking concepts introduced in :pep:`532`, this PEP "
"proposes that comparison chaining be changed to explicitly check if the "
"left comparison returns a circuit breaker, and if so, use ``else`` rather"
" than ``and`` to implement the comparison chaining::"
msgstr ""

#: ../../peps/pep-0535.rst:74
msgid ""
"This allows types like NumPy arrays to control the behaviour of chained "
"comparisons by returning suitably defined circuit breakers from "
"comparison operations."
msgstr ""

#: ../../peps/pep-0535.rst:78
msgid ""
"The expansion of this logic to an arbitrary number of chained comparison "
"operations would be the same as the existing expansion for ``and``."
msgstr ""

#: ../../peps/pep-0535.rst:82
msgid "Rationale"
msgstr ""

#: ../../peps/pep-0535.rst:84
msgid "In ultimately rejecting :pep:`335`, Guido van Rossum noted [1]_:"
msgstr ""

#: ../../peps/pep-0535.rst:86
msgid ""
"The NumPy folks brought up a somewhat separate issue: for them, the most "
"common use case is chained comparisons (e.g. A < B < C)."
msgstr ""

#: ../../peps/pep-0535.rst:89
msgid ""
"To understand this observation, we first need to look at how comparisons "
"work with NumPy arrays::"
msgstr ""

#: ../../peps/pep-0535.rst:102
msgid ""
"Here we see that NumPy array comparisons are element-wise by default, "
"comparing each element in the left hand array to the corresponding "
"element in the right hand array, and producing a matrix of boolean "
"results."
msgstr ""

#: ../../peps/pep-0535.rst:106
msgid ""
"If either side of the comparison is a scalar value, then it is broadcast "
"across the array and compared to each individual element::"
msgstr ""

#: ../../peps/pep-0535.rst:114
msgid ""
"However, this broadcasting idiom breaks down if we attempt to use chained"
" comparisons::"
msgstr ""

#: ../../peps/pep-0535.rst:122
msgid ""
"The problem is that internally, Python implicitly expands this chained "
"comparison into the form::"
msgstr ""

#: ../../peps/pep-0535.rst:130
msgid ""
"And NumPy only permits implicit coercion to a boolean value for single-"
"element arrays where ``a.any()`` and ``a.all()`` can be assured of having"
" the same result::"
msgstr ""

#: ../../peps/pep-0535.rst:143
msgid ""
"The proposal in this PEP would allow this situation to be changed by "
"updating the definition of element-wise comparison operations in NumPy to"
" return a dedicated subclass that implements the new circuit breaking "
"protocol and also changes the result array's interpretation in a boolean "
"context to always return ``False`` and hence never trigger the short-"
"circuiting behaviour::"
msgstr ""

#: ../../peps/pep-0535.rst:164
msgid ""
"With this change, the chained comparison example above would be able to "
"return::"
msgstr ""

#: ../../peps/pep-0535.rst:171
msgid "Implementation"
msgstr ""

#: ../../peps/pep-0535.rst:173
msgid ""
"Actual implementation has been deferred pending in-principle interest in "
"the idea of making the changes proposed in :pep:`532`."
msgstr ""

#: ../../peps/pep-0535.rst:176
msgid "...TBD..."
msgstr ""

#: ../../peps/pep-0535.rst:180
msgid "References"
msgstr "ReferÃªncias"

#: ../../peps/pep-0535.rst:182
msgid ""
"PEP 335 rejection notification (https://mail.python.org/pipermail/python-"
"dev/2012-March/117510.html)"
msgstr ""

#: ../../peps/pep-0535.rst:186
msgid "Copyright"
msgstr "Copyright"

#: ../../peps/pep-0535.rst:188
msgid ""
"This document has been placed in the public domain under the terms of the"
" CC0 1.0 license: https://creativecommons.org/publicdomain/zero/1.0/"
msgstr ""

#~ msgid "Nick Coghlan <ncoghlan@gmail.com>"
#~ msgstr ""

