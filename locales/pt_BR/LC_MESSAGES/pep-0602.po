# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the PEPs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version:  PEPs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-07-14 02:33+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.15.0\n"

#: ../../peps/peps/pep-0602.rst
msgid "Author"
msgstr "Autor"

#: ../../peps/peps/pep-0602.rst:3
msgid "Łukasz Langa <lukasz@python.org>"
msgstr ""

#: ../../peps/peps/pep-0602.rst
msgid "PEP-Delegate"
msgstr ""

#: ../../peps/peps/pep-0602.rst:4
msgid "Brett Cannon <brett@python.org>"
msgstr ""

#: ../../peps/peps/pep-0602.rst
msgid "Discussions-To"
msgstr ""

#: ../../peps/peps/pep-0602.rst:5
msgid ""
"https://discuss.python.org/t/pep-602-annual-release-cycle-for-python/2296/"
msgstr ""

#: ../../peps/peps/pep-0602.rst
msgid "Status"
msgstr "Status"

#: ../../peps/peps/pep-0602.rst:6
msgid "Active"
msgstr ""

#: ../../peps/peps/pep-0602.rst
msgid "Type"
msgstr "Tipo"

#: ../../peps/peps/pep-0602.rst:7
msgid "Process"
msgstr ""

#: ../../peps/peps/pep-0602.rst
msgid "Created"
msgstr "Criada em"

#: ../../peps/peps/pep-0602.rst:8
msgid "04-Jun-2019"
msgstr ""

#: ../../peps/peps/pep-0602.rst
msgid "Python-Version"
msgstr ""

#: ../../peps/peps/pep-0602.rst:9
msgid "3.9"
msgstr ""

#: ../../peps/peps/pep-0602.rst
msgid "Post-History"
msgstr ""

#: ../../peps/peps/pep-0602.rst:10
msgid "`09-Oct-2023 <https://discuss.python.org/t/27002>`__"
msgstr ""

#: ../../peps/peps/pep-0602.rst
msgid "Resolution"
msgstr ""

#: ../../peps/peps/pep-0602.rst:11
msgid ""
"https://mail.python.org/archives/list/python-dev@python.org/thread/"
"KE7OS4PZASZMFTW2FP2MWZU5R4Q2QZKU/"
msgstr ""

#: ../../peps/peps/pep-0602.rst:15
msgid "Abstract"
msgstr ""

#: ../../peps/peps/pep-0602.rst:17
msgid ""
"This document describes a change in the release calendar for Python starting "
"with Python 3.9.  This change accelerates the release cadence such that "
"feature versions are released predictably every twelve months, in October "
"every year."
msgstr ""

#: ../../peps/peps/pep-0602.rst:24
msgid "Implementation"
msgstr ""

#: ../../peps/peps/pep-0602.rst:27
msgid "Seventeen months to develop a feature version"
msgstr ""

#: ../../peps/peps/pep-0602.rst:29
msgid ""
"This PEP proposes that Python 3.X.0 will be developed for around 17 months:"
msgstr ""

#: ../../peps/peps/pep-0602.rst:32
msgid ""
"The first *five months* overlap with Python 3.(X-1).0's beta and release "
"candidate stages and are thus unversioned."
msgstr ""

#: ../../peps/peps/pep-0602.rst:35
msgid ""
"The next *seven months* are spent on versioned alpha releases where both new "
"features are incrementally added and bug fixes are included."
msgstr ""

#: ../../peps/peps/pep-0602.rst:38
msgid ""
"The following *three months* are spent on four versioned beta releases where "
"**no new features** can be added but bug fixes are still included."
msgstr ""

#: ../../peps/peps/pep-0602.rst:42
msgid ""
"The final *two months* are spent on two release candidates (or more, if "
"necessary) and conclude with the release of the final release of Python 3."
"X.0."
msgstr ""

#: ../../peps/peps/pep-0602.rst:47
msgid "2 years of full support, 3 more years of security fixes"
msgstr ""

#: ../../peps/peps/pep-0602.rst:49
msgid ""
"After the release of Python 3.X.0, the 3.X series is maintained for five "
"years:"
msgstr ""

#: ../../peps/peps/pep-0602.rst:52
msgid ""
"During the *first twenty four months* (2 years) it receives bugfix updates "
"and full releases (sources and installers for Windows and macOS) are made "
"approximately every other month."
msgstr ""

#: ../../peps/peps/pep-0602.rst:56
msgid ""
"For the next *thirty six months* (3 years) it receives security updates and "
"source-only releases are made on an as-needed basis (no fixed cadence)."
msgstr ""

#: ../../peps/peps/pep-0602.rst:60
msgid "The final source-only release is made *five years* after 3.X.0."
msgstr ""

#: ../../peps/peps/pep-0602.rst:62
msgid ""
"Note: 2 years of full support start with :pep:`Python 3.13 <719>`.  Python "
"versions 3.9 - 3.12 operate on a calendar with 1½ year of full support, "
"followed by 3½ more years of security fixes."
msgstr ""

#: ../../peps/peps/pep-0602.rst:69
msgid "Annual release cadence"
msgstr ""

#: ../../peps/peps/pep-0602.rst:71
msgid ""
"Feature development of Python 3.(X+1).0 starts as soon as Python 3.X.0 Beta "
"1 is released.  This creates a twelve-month delta between Python feature "
"versions."
msgstr ""

#: ../../peps/peps/pep-0602.rst:77
msgid "Example"
msgstr ""

#: ../../peps/peps/pep-0602.rst:79 ../../peps/peps/pep-0602.rst:106
msgid "3.9 development begins: Tuesday, 2019-06-04"
msgstr ""

#: ../../peps/peps/pep-0602.rst:80
msgid "3.9.0 alpha 1: Monday, 2019-10-14"
msgstr ""

#: ../../peps/peps/pep-0602.rst:81
msgid "3.9.0 alpha 2: Monday, 2019-11-18"
msgstr ""

#: ../../peps/peps/pep-0602.rst:82
msgid "3.9.0 alpha 3: Monday, 2019-12-16"
msgstr ""

#: ../../peps/peps/pep-0602.rst:83
msgid "3.9.0 alpha 4: Monday, 2020-01-13"
msgstr ""

#: ../../peps/peps/pep-0602.rst:84
msgid "3.9.0 alpha 5: Monday, 2020-02-17"
msgstr ""

#: ../../peps/peps/pep-0602.rst:85
msgid "3.9.0 alpha 6: Monday, 2020-03-16"
msgstr ""

#: ../../peps/peps/pep-0602.rst:86
msgid "3.9.0 alpha 7: Monday, 2020-04-13"
msgstr ""

#: ../../peps/peps/pep-0602.rst:87
msgid "3.9.0 beta 1: Monday, 2020-05-18 (No new features beyond this point.)"
msgstr ""

#: ../../peps/peps/pep-0602.rst:90
msgid "3.9.0 beta 2: Monday, 2020-06-08"
msgstr ""

#: ../../peps/peps/pep-0602.rst:91
msgid "3.9.0 beta 3: Monday, 2020-06-29"
msgstr ""

#: ../../peps/peps/pep-0602.rst:92
msgid "3.9.0 beta 4: Monday, 2020-07-20"
msgstr ""

#: ../../peps/peps/pep-0602.rst:93
msgid "3.9.0 candidate 1: Monday, 2020-08-10"
msgstr ""

#: ../../peps/peps/pep-0602.rst:94
msgid "3.9.0 candidate 2: Monday, 2020-09-14"
msgstr ""

#: ../../peps/peps/pep-0602.rst:95
msgid "3.9.0 final: Monday, 2020-10-05"
msgstr ""

#: ../../peps/peps/pep-0602.rst:101
msgid "Figure 1. Consequences of the annual release cycle on the calendar."
msgstr ""

#: ../../peps/peps/pep-0602.rst:103
msgid ""
"In comparison, if this PEP is rejected and Python keeps the current release "
"schedule:"
msgstr ""

#: ../../peps/peps/pep-0602.rst:107
msgid "3.9.0 alpha 1: Monday, 2020-08-03  (10 months later)"
msgstr ""

#: ../../peps/peps/pep-0602.rst:108
msgid "3.9.0 alpha 2: Monday, 2020-09-07"
msgstr ""

#: ../../peps/peps/pep-0602.rst:109
msgid "3.9.0 alpha 3: Monday, 2020-10-05"
msgstr ""

#: ../../peps/peps/pep-0602.rst:110
msgid "3.9.0 alpha 4: Monday, 2020-11-02"
msgstr ""

#: ../../peps/peps/pep-0602.rst:111
msgid "3.9.0 beta 1: Monday, 2020-11-30  (6 months later)"
msgstr ""

#: ../../peps/peps/pep-0602.rst:112
msgid "3.9.0 beta 2: Monday, 2021-01-04"
msgstr ""

#: ../../peps/peps/pep-0602.rst:113
msgid "3.9.0 beta 3: Monday, 2021-02-01"
msgstr ""

#: ../../peps/peps/pep-0602.rst:114
msgid "3.9.0 beta 4: Monday, 2021-03-01"
msgstr ""

#: ../../peps/peps/pep-0602.rst:115
msgid "3.9.0 candidate 1: Monday, 2021-03-29"
msgstr ""

#: ../../peps/peps/pep-0602.rst:116
msgid "3.9.0 candidate 2: Monday, 2021-04-05 (if necessary)"
msgstr ""

#: ../../peps/peps/pep-0602.rst:117
msgid "3.9.0 final: Monday, 2021-04-19  (6 months later)"
msgstr ""

#: ../../peps/peps/pep-0602.rst:121
msgid "Dependent Policies"
msgstr ""

#: ../../peps/peps/pep-0602.rst:124
msgid "Deprecations"
msgstr ""

#: ../../peps/peps/pep-0602.rst:126
msgid ""
"The current policy around breaking changes assumes at least two releases "
"before a deprecated feature is removed from Python or a ``__future__`` "
"behavior is enabled by default.  This is documented in :pep:`387`."
msgstr ""

#: ../../peps/peps/pep-0602.rst:130
msgid ""
"This PEP proposes to keep this policy of **at least** two releases before "
"making a breaking change."
msgstr ""

#: ../../peps/peps/pep-0602.rst:134
msgid "The term of the Steering Council"
msgstr ""

#: ../../peps/peps/pep-0602.rst:136
msgid ""
"The current wording of :pep:`13` states that \"a new council is elected "
"after each feature release\".  This PEP proposes to keep this policy as it "
"will lead to a consistent election schedule."
msgstr ""

#: ../../peps/peps/pep-0602.rst:141
msgid "The term of the Release Manager"
msgstr ""

#: ../../peps/peps/pep-0602.rst:143
msgid ""
"The current undocumented convention is for a single Release Manager to "
"handle two feature releases of Python.  This PEP proposes to keep this "
"policy, allowing for the term to be extended to more releases with approval "
"from the Steering Council and the Cabal of Release Managers."
msgstr ""

#: ../../peps/peps/pep-0602.rst:148
msgid ""
"In particular, since this PEP is authored by the active Release Manager and "
"its effect would shorten the term of the Release Manager, the author is open "
"to managing the release of a third feature release to compensate for the "
"disruption."
msgstr ""

#: ../../peps/peps/pep-0602.rst:155
msgid "Rationale and Goals"
msgstr ""

#: ../../peps/peps/pep-0602.rst:157
msgid "This change provides the following advantages:"
msgstr ""

#: ../../peps/peps/pep-0602.rst:159
msgid ""
"makes releases smaller: since doubling the cadence doesn't double our "
"available development resources, consecutive releases are going to be "
"smaller in terms of features;"
msgstr ""

#: ../../peps/peps/pep-0602.rst:163
msgid "puts features and bug fixes in hands of users sooner;"
msgstr ""

#: ../../peps/peps/pep-0602.rst:165
msgid ""
"creates a more gradual upgrade path for users, by decreasing the surface of "
"change in any single release;"
msgstr ""

#: ../../peps/peps/pep-0602.rst:168
msgid ""
"creates a predictable calendar for releases where the final release is "
"always in October (so after the annual core sprint), and the beta phase "
"starts in late May (so after PyCon US sprints), which is especially "
"important for core developers who need to plan to include Python involvement "
"in their calendar;"
msgstr ""

#: ../../peps/peps/pep-0602.rst:174
msgid ""
"decreases the urge to rush features shortly before \"Beta 1\" due to the "
"risk of them \"slipping for 18 months\";"
msgstr ""

#: ../../peps/peps/pep-0602.rst:177
msgid ""
"allows for synchronizing the schedule of Python release management with "
"external distributors like Fedora who've been historically very helpful in "
"finding regressions early not only in core Python but also in third-party "
"libraries, helping moving the community forward to support the latest "
"version of Python from Day 1;"
msgstr ""

#: ../../peps/peps/pep-0602.rst:183
msgid ""
"increases the explicit alpha release phase, which provides meaningful "
"snapshots of progress on new features;"
msgstr ""

#: ../../peps/peps/pep-0602.rst:186
msgid ""
"significantly cuts the implicit \"alpha 0\" release phase which provides "
"limited use for new development anyway (it overlaps with the beta of the "
"*currently developed*, still unreleased, version)."
msgstr ""

#: ../../peps/peps/pep-0602.rst:191
msgid "Non-goals"
msgstr ""

#: ../../peps/peps/pep-0602.rst:193
msgid ""
"Adopting an annual release calendar allows for natural switching to calendar "
"versioning, for example by calling Python 3.9 \"Python 3.20\" since it's "
"released in October '20 and so on (\"Python 3.23\" would be the one released "
"in October '23)."
msgstr ""

#: ../../peps/peps/pep-0602.rst:198
msgid ""
"While the ease of switching to calendar versioning can be treated as an "
"advantage of an annual release cycle, this PEP does not advocate for or "
"against a change in how Python is versioned.  Should the annual release "
"cycle be adopted, the versioning question will be dealt with in a separate "
"PEP."
msgstr ""

#: ../../peps/peps/pep-0602.rst:205
msgid "Non-risks"
msgstr ""

#: ../../peps/peps/pep-0602.rst:207
msgid ""
"This change does not shorten the currently documented support calendar for a "
"Python release, both in terms of bugfix releases and security fixes."
msgstr ""

#: ../../peps/peps/pep-0602.rst:211
msgid ""
"This change does not accelerate the velocity of development.  Python is not "
"going to become incompatible faster or accrue new features faster. It's just "
"that features are going to be released more gradually as they are developed."
msgstr ""

#: ../../peps/peps/pep-0602.rst:216
msgid ""
"Consequently, while this change introduces the ability for users to upgrade "
"much faster, it does not require them to do so.  Say, if they upgrade every "
"second release, their experience with Python is going to be similar to the "
"current situation."
msgstr ""

#: ../../peps/peps/pep-0602.rst:222
msgid "Risks"
msgstr ""

#: ../../peps/peps/pep-0602.rst:225
msgid "Python redistribution"
msgstr ""

#: ../../peps/peps/pep-0602.rst:227
msgid ""
"This requires changes to how integrators, like Linux distributions, release "
"Python within their systems."
msgstr ""

#: ../../peps/peps/pep-0602.rst:231
msgid "The testing matrix"
msgstr ""

#: ../../peps/peps/pep-0602.rst:233
msgid ""
"This eventually increases the testing matrix for library and application "
"maintainers that want to support all actively supported Python versions by "
"one or two:"
msgstr ""

#: ../../peps/peps/pep-0602.rst:241
msgid "Figure 2. Testing matrix in the 18-month cadence vs. the 12-month"
msgstr ""

#: ../../peps/peps/pep-0602.rst:243
msgid ""
"The \"extended bugfix support at the discretion of the Release Manager\" "
"stage of the current release cycle is not codified.  If fact, :pep:`101` "
"currently states that after the release of Python 3.(X+1).0 only one last "
"bugfix release is made for Python 3.X.0.  However, in practice at least the "
"last four versions of Python 3 overlapped with stable releases of the next "
"version for around six months.  Figure 2 is including this information to "
"demonstrate that overlap between stable version releases with the 12-month "
"release cadence will be nothing new."
msgstr ""

#: ../../peps/peps/pep-0602.rst:253
msgid "Other policies may depend on the release cadence"
msgstr ""

#: ../../peps/peps/pep-0602.rst:255
msgid ""
"Although identified dependent policies were addressed in a previous section, "
"it is entirely possible there are some other areas which implicitly rely on "
"the timing of Python releases."
msgstr ""

#: ../../peps/peps/pep-0602.rst:261
msgid "Rejected Ideas"
msgstr ""

#: ../../peps/peps/pep-0602.rst:264
msgid "Keep the current 18 month release cadence"
msgstr ""

#: ../../peps/peps/pep-0602.rst:266
msgid ""
"This is undesirable both for core developers and end users. From the "
"perspective of the core developer:"
msgstr ""

#: ../../peps/peps/pep-0602.rst:269
msgid ""
"it makes contribution scheduling harder due to irregular release dates every "
"year;"
msgstr ""

#: ../../peps/peps/pep-0602.rst:272
msgid ""
"it creates a surge of rushed commits before (and even after!) Beta 1 due to "
"the stress involved with \"missing a release\";"
msgstr ""

#: ../../peps/peps/pep-0602.rst:275
msgid ""
"ironically, after Beta 1 it creates a false sense of having \"plenty of "
"time\" before the next release, time that passes quickly regardless;"
msgstr ""

#: ../../peps/peps/pep-0602.rst:278
msgid ""
"it causes certain elements of the workflow to be executed so rarely that "
"they are not explicitly documented, let alone automated."
msgstr ""

#: ../../peps/peps/pep-0602.rst:281
msgid "More importantly, from the perspective of the user:"
msgstr ""

#: ../../peps/peps/pep-0602.rst:283
msgid ""
"it creates releases with many new features, some being explicitly "
"incompatible and some being accidentally incompatible, which makes the "
"upgrade cost relatively high every time;"
msgstr ""

#: ../../peps/peps/pep-0602.rst:287
msgid ""
"it sits on features and incompatible bug fixes for over a year before "
"becoming available to the user; and more specifically"
msgstr ""

#: ../../peps/peps/pep-0602.rst:290
msgid ""
"it causes every \"point zero\" release to be extra risky for users. While we "
"provide and recommend testing with alphas and betas, \"point zero\" is the "
"first release of a given Python version for many users.  The bigger a "
"release is feature-wise, the more potential problems are hiding in \"point "
"zero releases\"."
msgstr ""

#: ../../peps/peps/pep-0602.rst:297
msgid "Double the release cadence to achieve 9 months between feature versions"
msgstr ""

#: ../../peps/peps/pep-0602.rst:299
msgid ""
"This was originally proposed in :pep:`596` and rejected as both too "
"irregular and too short.  This would not give any of the benefits of a "
"regular release calendar but it would shorten all development phases, "
"especially the beta + RC phases.  This was considered dangerous."
msgstr ""

#: ../../peps/peps/pep-0602.rst:305
msgid ""
"Keep \"4 betas over 4 months and a final month for the release candidate\""
msgstr ""

#: ../../peps/peps/pep-0602.rst:307
msgid ""
"While this would make the release calendar a bit cleaner, `it would make it "
"very hard for external distributors like Fedora <https://discuss.python.org/"
"t/pep-602-annual-release-cycle-for-python/2296/79?u=ambv>`_ to release the "
"newest version of Python as soon as possible.  We are adjusting Python's "
"calendar here in the hope that this will enable Fedora to integrate the "
"newest version of Python with the newest version of Fedora *as both are "
"being developed* which makes both projects better."
msgstr ""

#: ../../peps/peps/pep-0602.rst:317
msgid "Slow down releases but don't freeze feature development with Beta 1"
msgstr ""

#: ../../peps/peps/pep-0602.rst:319
msgid ""
"This is described in :pep:`598`.  This proposal includes non-standard "
"concepts like the \"incremental feature release\" which makes it hard to "
"understand.  The presented advantages are unclear while the unfamiliarity of "
"the scheme poses a real risk of user and integrator confusion."
msgstr ""

#: ../../peps/peps/pep-0602.rst:326
msgid "Long-Term Support Releases"
msgstr ""

#: ../../peps/peps/pep-0602.rst:328
msgid ""
"Each version of Python is effectively long-term support: it's supported for "
"five years, with the first eighteen months allowing regular bug fixes and "
"security updates.  For the remaining time security updates are accepted and "
"promptly released."
msgstr ""

#: ../../peps/peps/pep-0602.rst:333
msgid "No extended support in the vein of Python 2.7 is planned going forward."
msgstr ""

#: ../../peps/peps/pep-0602.rst:337
msgid "Copyright"
msgstr "Copyright"

#: ../../peps/peps/pep-0602.rst:339
msgid ""
"This document is placed in the public domain or under the CC0-1.0-Universal "
"license, whichever is more permissive."
msgstr ""
