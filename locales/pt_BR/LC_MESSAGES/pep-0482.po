# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the PEPs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version:  PEPs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-20 10:43-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"

#: ../../peps/pep-0482.rst
msgid "Author"
msgstr "Autor"

#: ../../peps/pep-0482.rst:5
msgid "Łukasz Langa <lukasz@python.org>"
msgstr ""

#: ../../peps/pep-0482.rst
msgid "Discussions-To"
msgstr ""

#: ../../peps/pep-0482.rst:6
msgid "python-ideas@python.org"
msgstr ""

#: ../../peps/pep-0482.rst
msgid "Status"
msgstr "Status"

#: ../../peps/pep-0482.rst:7
msgid "Final"
msgstr ""

#: ../../peps/pep-0482.rst
msgid "Type"
msgstr "Tipo"

#: ../../peps/pep-0482.rst:8
msgid "Informational"
msgstr ""

#: ../../peps/pep-0482.rst
msgid "Topic"
msgstr ""

#: ../../peps/pep-0482.rst:9
msgid "Typing"
msgstr ""

#: ../../peps/pep-0482.rst
msgid "Created"
msgstr "Criada em"

#: ../../peps/pep-0482.rst:11
msgid "08-Jan-2015"
msgstr ""

#: ../../peps/pep-0482.rst
msgid "Post-History"
msgstr "Pós-história"

#: ../../peps/pep-0482.rst:16
msgid "Abstract"
msgstr ""

#: ../../peps/pep-0482.rst:18
msgid ""
"This PEP is one of three related to type hinting.  This PEP gives a "
"literature overview of related work.  The main spec is :pep:`484`."
msgstr ""

#: ../../peps/pep-0482.rst:23
msgid "Existing Approaches for Python"
msgstr ""

#: ../../peps/pep-0482.rst:27
msgid "mypy"
msgstr ""

#: ../../peps/pep-0482.rst:29
msgid ""
"(This section is a stub, since `mypy`__ is essentially what we're "
"proposing.)"
msgstr ""

#: ../../peps/pep-0482.rst:36
msgid "Reticulated Python"
msgstr ""

#: ../../peps/pep-0482.rst:38
msgid ""
"`Reticulated Python`__ by Michael Vitousek is an example of a slightly "
"different approach to gradual typing for Python. It is described in an "
"actual `academic paper`__ written by Vitousek with Jeremy Siek and Jim "
"Baker (the latter of Jython fame)."
msgstr ""

#: ../../peps/pep-0482.rst:47
msgid "PyCharm"
msgstr ""

#: ../../peps/pep-0482.rst:49
msgid ""
"PyCharm by JetBrains has been providing a way to specify and check types "
"for about four years.  The type system suggested by PyCharm__ grew from "
"simple class types to tuple types, generic types, function types, etc. "
"based on feedback of many users who shared their experience of using type"
" hints in their code."
msgstr ""

#: ../../peps/pep-0482.rst:58
msgid "Others"
msgstr ""

#: ../../peps/pep-0482.rst:60
msgid ""
"TBD: Add sections on pyflakes__, pylint__, numpy__, `Argument Clinic`__, "
"pytypedecl__, numba__, obiwan__."
msgstr ""

#: ../../peps/pep-0482.rst:72
msgid "Existing Approaches in Other Languages"
msgstr ""

#: ../../peps/pep-0482.rst:75
msgid "ActionScript"
msgstr ""

#: ../../peps/pep-0482.rst:77
msgid ""
"ActionScript__ is a class-based, single inheritance, object-oriented "
"superset of ECMAScript.  It supports inferfaces and strong runtime-"
"checked static typing.  Compilation supports a “strict dialect” where "
"type mismatches are reported at compile-time."
msgstr ""

#: ../../peps/pep-0482.rst:84 ../../peps/pep-0482.rst:122
#: ../../peps/pep-0482.rst:145 ../../peps/pep-0482.rst:182
msgid "Example code with types::"
msgstr ""

#: ../../peps/pep-0482.rst:109
msgid "Dart"
msgstr ""

#: ../../peps/pep-0482.rst:111
msgid ""
"Dart__ is a class-based, single inheritance, object-oriented language "
"with C-style syntax.  It supports interfaces, abstract classes, reified "
"generics, and optional typing."
msgstr ""

#: ../../peps/pep-0482.rst:117
msgid ""
"Types are inferred when possible.  The runtime differentiates between two"
" modes of execution: *checked mode* aimed for development (catching type "
"errors at runtime) and *production mode* recommended for speed execution "
"(ignoring types and asserts)."
msgstr ""

#: ../../peps/pep-0482.rst:137
msgid "Hack"
msgstr ""

#: ../../peps/pep-0482.rst:139
msgid ""
"Hack__ is a programming language that interoperates seamlessly with PHP."
"  It provides opt-in static type checking, type aliasing, generics, "
"nullable types, and lambdas."
msgstr ""

#: ../../peps/pep-0482.rst:166
msgid "TypeScript"
msgstr ""

#: ../../peps/pep-0482.rst:168
msgid ""
"TypeScript__ is a typed superset of JavaScript that adds interfaces, "
"classes, mixins and modules to the language."
msgstr ""

#: ../../peps/pep-0482.rst:173
msgid ""
"Type checks are duck typed.  Multiple valid function signatures are "
"specified by supplying overloaded function declarations.  Functions and "
"classes can use generics as type parameterization.  Interfaces can have "
"optional fields.  Interfaces can specify array and dictionary types. "
"Classes can have constructors that implicitly add arguments as fields. "
"Classes can have static fields.  Classes can have private fields. Classes"
" can have getters/setters for fields (like property).  Types are "
"inferred."
msgstr ""

#: ../../peps/pep-0482.rst:218
msgid "Copyright"
msgstr "Copyright"

#: ../../peps/pep-0482.rst:220
msgid "This document has been placed in the public domain."
msgstr "Este documento foi colocado em domínio público."

#~ msgid ""
#~ "(This section is a stub, since "
#~ "mypy [mypy]_ is essentially what we're"
#~ " proposing.)"
#~ msgstr ""

#~ msgid ""
#~ "Reticulated Python [reticulated]_ by Michael"
#~ " Vitousek is an example of a "
#~ "slightly different approach to gradual "
#~ "typing for Python. It is described "
#~ "in an actual academic paper "
#~ "[reticulated-paper]_ written by Vitousek "
#~ "with Jeremy Siek and Jim Baker "
#~ "(the latter of Jython fame)."
#~ msgstr ""

#~ msgid ""
#~ "PyCharm by JetBrains has been providing"
#~ " a way to specify and check "
#~ "types for about four years.  The "
#~ "type system suggested by PyCharm "
#~ "[pycharm]_ grew from simple class types"
#~ " to tuple types, generic types, "
#~ "function types, etc. based on feedback"
#~ " of many users who shared their "
#~ "experience of using type hints in "
#~ "their code."
#~ msgstr ""

#~ msgid ""
#~ "TBD: Add sections on pyflakes "
#~ "[pyflakes]_, pylint [pylint]_, numpy [numpy]_,"
#~ " Argument Clinic [argumentclinic]_, pytypedecl"
#~ " [pytypedecl]_, numba [numba]_, obiwan "
#~ "[obiwan]_."
#~ msgstr ""

#~ msgid ""
#~ "ActionScript [actionscript]_ is a class-"
#~ "based, single inheritance, object-oriented "
#~ "superset of ECMAScript.  It supports "
#~ "inferfaces and strong runtime-checked "
#~ "static typing.  Compilation supports a "
#~ "“strict dialect” where type mismatches "
#~ "are reported at compile-time."
#~ msgstr ""

#~ msgid ""
#~ "Dart [dart]_ is a class-based, "
#~ "single inheritance, object-oriented language"
#~ " with C-style syntax.  It supports "
#~ "interfaces, abstract classes, reified "
#~ "generics, and optional typing."
#~ msgstr ""

#~ msgid ""
#~ "Hack [hack]_ is a programming language"
#~ " that interoperates seamlessly with PHP."
#~ "  It provides opt-in static type "
#~ "checking, type aliasing, generics, nullable"
#~ " types, and lambdas."
#~ msgstr ""

#~ msgid ""
#~ "TypeScript [typescript]_ is a typed "
#~ "superset of JavaScript that adds "
#~ "interfaces, classes, mixins and modules "
#~ "to the language."
#~ msgstr ""

#~ msgid "References"
#~ msgstr "Referências"

#~ msgid "http://mypy-lang.org"
#~ msgstr ""

#~ msgid "https://github.com/mvitousek/reticulated"
#~ msgstr ""

#~ msgid "http://wphomes.soic.indiana.edu/jsiek/files/2014/03/retic-python.pdf"
#~ msgstr ""

#~ msgid "https://github.com/JetBrains/python-skeletons#types"
#~ msgstr ""

#~ msgid "http://pypi.python.org/pypi/obiwan"
#~ msgstr ""

#~ msgid "http://numba.pydata.org"
#~ msgstr ""

#~ msgid "https://github.com/google/pytypedecl"
#~ msgstr ""

#~ msgid "https://docs.python.org/3/howto/clinic.html"
#~ msgstr ""

#~ msgid "http://www.numpy.org"
#~ msgstr ""

#~ msgid "http://www.typescriptlang.org"
#~ msgstr ""

#~ msgid "http://hacklang.org"
#~ msgstr ""

#~ msgid "https://www.dartlang.org"
#~ msgstr ""

#~ msgid "http://livedocs.adobe.com/specs/actionscript/3/"
#~ msgstr ""

#~ msgid "https://github.com/pyflakes/pyflakes/"
#~ msgstr ""

#~ msgid "http://www.pylint.org"
#~ msgstr ""

