# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the PEPs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version:  PEPs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-20 10:43-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"

#: ../../peps/pep-0415.rst
msgid "Author"
msgstr "Autor"

#: ../../peps/pep-0415.rst:5
msgid "Benjamin Peterson <benjamin@python.org>"
msgstr ""

#: ../../peps/pep-0415.rst
msgid "BDFL-Delegate"
msgstr ""

#: ../../peps/pep-0415.rst:6
msgid "Alyssa Coghlan"
msgstr ""

#: ../../peps/pep-0415.rst
msgid "Status"
msgstr "Status"

#: ../../peps/pep-0415.rst:7
msgid "Final"
msgstr ""

#: ../../peps/pep-0415.rst
msgid "Type"
msgstr "Tipo"

#: ../../peps/pep-0415.rst:8
msgid "Standards Track"
msgstr ""

#: ../../peps/pep-0415.rst
msgid "Created"
msgstr "Criada em"

#: ../../peps/pep-0415.rst:10 ../../peps/pep-0415.rst:12
msgid "26-Feb-2012"
msgstr ""

#: ../../peps/pep-0415.rst
msgid "Python-Version"
msgstr ""

#: ../../peps/pep-0415.rst:11
msgid "3.3"
msgstr ""

#: ../../peps/pep-0415.rst
msgid "Post-History"
msgstr "Pós-história"

#: ../../peps/pep-0415.rst
msgid "Replaces"
msgstr ""

#: ../../peps/pep-0415.rst:13
msgid "409"
msgstr ""

#: ../../peps/pep-0415.rst
msgid "Resolution"
msgstr ""

#: ../../peps/pep-0415.rst:14
msgid "https://mail.python.org/pipermail/python-dev/2012-May/119467.html"
msgstr ""

#: ../../peps/pep-0415.rst:18
msgid "Abstract"
msgstr ""

#: ../../peps/pep-0415.rst:20
msgid ""
":pep:`409` introduced support for the ``raise exc from None`` construct "
"to allow the display of the exception context to be explicitly "
"suppressed. This PEP retains the language level changes already "
"implemented in :pep:`409`, but replaces the underlying implementation "
"mechanism with a simpler approach based on a new ``__suppress_context__``"
" attribute on all ``BaseException`` instances."
msgstr ""

#: ../../peps/pep-0415.rst:29
msgid "PEP Acceptance"
msgstr ""

#: ../../peps/pep-0415.rst:31
msgid "This PEP was accepted by Alyssa Coghlan on the 14th of May, 2012."
msgstr ""

#: ../../peps/pep-0415.rst:35
msgid "Rationale"
msgstr ""

#: ../../peps/pep-0415.rst:37
msgid ""
":pep:`409` changes ``__cause__`` to be ``Ellipsis`` by default. Then if "
"``__cause__`` is set to ``None`` by ``raise exc from None``, no context "
"or cause will be printed should the exception be uncaught."
msgstr ""

#: ../../peps/pep-0415.rst:41
msgid ""
"The main problem with this scheme is it complicates the role of "
"``__cause__``. ``__cause__`` should indicate the cause of the exception "
"not whether ``__context__`` should be printed or not. This use of "
"``__cause__`` is also not easily extended in the future. For example, we "
"may someday want to allow the programmer to select which of "
"``__context__`` and ``__cause__`` will be printed. The :pep:`409` "
"implementation is not amenable to this."
msgstr ""

#: ../../peps/pep-0415.rst:48
msgid ""
"The use of ``Ellipsis`` is a hack. Before :pep:`409`, ``Ellipsis`` was "
"used exclusively in extended slicing. Extended slicing has nothing to do "
"with exceptions, so it's not clear to someone inspecting an exception "
"object why ``__cause__`` should be set to ``Ellipsis``. Using "
"``Ellipsis`` by default for ``__cause__`` makes it asymmetrical with "
"``__context__``."
msgstr ""

#: ../../peps/pep-0415.rst:56
msgid "Proposal"
msgstr ""

#: ../../peps/pep-0415.rst:58
msgid ""
"A new attribute on ``BaseException``, ``__suppress_context__``, will be "
"introduced. Whenever ``__cause__`` is set, ``__suppress_context__`` will "
"be set to ``True``. In particular, ``raise exc from cause`` syntax will "
"set ``exc.__suppress_context__`` to ``True``. Exception printing code "
"will check for that attribute to determine whether context and cause will"
" be printed. ``__cause__`` will return to its original purpose and "
"values."
msgstr ""

#: ../../peps/pep-0415.rst:66
msgid ""
"There is precedence for ``__suppress_context__`` with the "
"``print_line_and_file`` exception attribute."
msgstr ""

#: ../../peps/pep-0415.rst:69
msgid "To summarize, ``raise exc from cause`` will be equivalent to::"
msgstr ""

#: ../../peps/pep-0415.rst:74
msgid ""
"where ``exc.__cause__ = cause`` implicitly sets "
"``exc.__suppress_context__``."
msgstr ""

#: ../../peps/pep-0415.rst:79
msgid "Patches"
msgstr ""

#: ../../peps/pep-0415.rst:81
msgid "There is a patch on `Issue 14133`_."
msgstr ""

#: ../../peps/pep-0415.rst:92
msgid "Copyright"
msgstr "Copyright"

#: ../../peps/pep-0415.rst:94
msgid "This document has been placed in the public domain."
msgstr "Este documento foi colocado em domínio público."

#~ msgid "Nick Coghlan"
#~ msgstr ""

#~ msgid "This PEP was accepted by Nick Coghlan on the 14th of May, 2012."
#~ msgstr ""

