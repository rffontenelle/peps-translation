# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the PEPs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version:  PEPs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-07-14 02:33+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.15.0\n"

#: ../../peps/peps/pep-0042.rst
msgid "Author"
msgstr "Autor"

#: ../../peps/peps/pep-0042.rst:3
msgid "Jeremy Hylton <jeremy@alum.mit.edu>"
msgstr ""

#: ../../peps/peps/pep-0042.rst
msgid "Status"
msgstr "Status"

#: ../../peps/peps/pep-0042.rst:4
msgid "Withdrawn"
msgstr ""

#: ../../peps/peps/pep-0042.rst
msgid "Type"
msgstr "Tipo"

#: ../../peps/peps/pep-0042.rst:5
msgid "Process"
msgstr "Processo"

#: ../../peps/peps/pep-0042.rst
msgid "Created"
msgstr "Criada em"

#: ../../peps/peps/pep-0042.rst:6
msgid "12-Sep-2000"
msgstr ""

#: ../../peps/peps/pep-0042.rst
msgid "Post-History"
msgstr "Pós-história"

#: ../../peps/peps/pep-0042.rst:11
msgid ""
"It is `obsolete`_. All new feature requests should  either go to the `Python "
"bug tracker`_ for very simple requests or the `Ideas Discourse category`_ "
"for everything else.  The rest of this document is retained for historical "
"purposes only."
msgstr ""

#: ../../peps/peps/pep-0042.rst:19
msgid "Introduction"
msgstr "Introdução"

#: ../../peps/peps/pep-0042.rst:21
msgid ""
"This PEP contains a list of feature requests that may be considered for "
"future versions of Python.  Large feature requests should not be included "
"here, but should be described in separate PEPs; however a large feature "
"request that doesn't have its own PEP can be listed here until its own PEP "
"is created.  See :pep:`0` for details."
msgstr ""

#: ../../peps/peps/pep-0042.rst:27
msgid ""
"This PEP was created to allow us to close bug reports that are really "
"feature requests.  Marked as Open, they distract from the list of real bugs "
"(which should ideally be less than a page).  Marked as Closed, they tend to "
"be forgotten.  The procedure now is:  if a bug report is really a feature "
"request, add the feature request to this PEP; mark the bug as \"feature "
"request\", \"later\", and \"closed\"; and add a comment to the bug saying "
"that this is the case (mentioning the PEP explicitly).  It is also "
"acceptable to move large feature requests directly from the bugs database to "
"a separate PEP."
msgstr ""

#: ../../peps/peps/pep-0042.rst:37
msgid ""
"This PEP should really be separated into four different categories "
"(categories due to Laura Creighton):"
msgstr ""

#: ../../peps/peps/pep-0042.rst:40
msgid "BDFL rejects as a bad idea.  Don't come back with it."
msgstr ""

#: ../../peps/peps/pep-0042.rst:42
msgid ""
"BDFL will put in if somebody writes the code.  (Or at any rate, BDFL will "
"say 'change this and I will put it in' if you show up with code.)"
msgstr ""

#: ../../peps/peps/pep-0042.rst:46
msgid "possibly divided into:"
msgstr ""

#: ../../peps/peps/pep-0042.rst:48
msgid "BDFL would really like to see some code!"
msgstr ""

#: ../../peps/peps/pep-0042.rst:50
msgid ""
"BDFL is never going to be enthusiastic about this, but will work it in when "
"it's easy."
msgstr ""

#: ../../peps/peps/pep-0042.rst:53
msgid ""
"If you show up with code, BDFL will make a pronouncement.  It might be ICK."
msgstr ""

#: ../../peps/peps/pep-0042.rst:56
msgid ""
"This is too vague.  This is rejected, but only on the grounds of vagueness.  "
"If you like this enhancement, make a new PEP."
msgstr ""

#: ../../peps/peps/pep-0042.rst:61
msgid "Core Language / Builtins"
msgstr ""

#: ../../peps/peps/pep-0042.rst:63
msgid "The parser should handle more deeply nested parse trees."
msgstr ""

#: ../../peps/peps/pep-0042.rst:65
msgid ""
"The following will fail -- ``eval(\"[\"*50`` + ``\"]\"*50)`` -- because the "
"parser has a hard-coded limit on stack size.  This limit should be raised or "
"removed.  Removal would be hard because the current compiler can overflow "
"the C stack if the nesting is too deep."
msgstr ""

#: ../../peps/peps/pep-0042.rst:70
msgid "https://bugs.python.org/issue215555"
msgstr ""

#: ../../peps/peps/pep-0042.rst:72
msgid ""
"Non-accidental IEEE-754 support (Infs, NaNs, settable traps, etc). Big "
"project."
msgstr ""

#: ../../peps/peps/pep-0042.rst:75
msgid ""
"Windows:  Trying to create (or even access) files with certain magic names "
"can hang or crash Windows systems.  This is really a bug in the OSes, but "
"some apps try to shield users from it.  When it happens, the symptoms are "
"very confusing."
msgstr ""

#: ../../peps/peps/pep-0042.rst:80
msgid "Hang using files named prn.txt, etc https://bugs.python.org/issue481171"
msgstr ""

#: ../../peps/peps/pep-0042.rst:82
msgid ""
"eval and free variables: It might be useful if there was a way to pass "
"bindings for free variables to eval when a code object with free variables "
"is passed. https://bugs.python.org/issue443866"
msgstr ""

#: ../../peps/peps/pep-0042.rst:87
msgid "Standard Library"
msgstr ""

#: ../../peps/peps/pep-0042.rst:89
msgid ""
"The urllib module should support proxies which require authentication.  See "
"SourceForge bug #210619 for information:"
msgstr ""

#: ../../peps/peps/pep-0042.rst:92
msgid "https://bugs.python.org/issue210619"
msgstr ""

#: ../../peps/peps/pep-0042.rst:94
msgid ""
"os.rename() should be modified to handle EXDEV errors on platforms that "
"don't allow rename() to operate across filesystem boundaries by copying the "
"file over and removing the original. Linux is one system that requires this "
"treatment."
msgstr ""

#: ../../peps/peps/pep-0042.rst:99
msgid "https://bugs.python.org/issue212317"
msgstr ""

#: ../../peps/peps/pep-0042.rst:101
msgid ""
"signal handling doesn't always work as expected.  E.g. if sys.stdin."
"readline() is interrupted by a (returning) signal handler, it returns \"\".  "
"It would be better to make it raise an exception (corresponding to EINTR) or "
"to restart.  But these changes would have to applied to all places that can "
"do blocking interruptible I/O.  So it's a big project."
msgstr ""

#: ../../peps/peps/pep-0042.rst:108
msgid "https://bugs.python.org/issue210599"
msgstr ""

#: ../../peps/peps/pep-0042.rst:110
msgid "Extend Windows utime to accept directory paths."
msgstr ""

#: ../../peps/peps/pep-0042.rst:112
msgid "https://bugs.python.org/issue214245"
msgstr ""

#: ../../peps/peps/pep-0042.rst:114
msgid "Extend copy.py to module & function types."
msgstr ""

#: ../../peps/peps/pep-0042.rst:116
msgid "https://bugs.python.org/issue214553"
msgstr ""

#: ../../peps/peps/pep-0042.rst:118
msgid "Better checking for bad input to ``marshal.load*().``"
msgstr ""

#: ../../peps/peps/pep-0042.rst:120
msgid "https://bugs.python.org/issue214754"
msgstr ""

#: ../../peps/peps/pep-0042.rst:122
msgid ""
"rfc822.py should be more lenient than the spec in the types of address "
"fields it parses.  Specifically, an invalid address of the form \"From: "
"Amazon.com <delivers-news2@amazon.com>\" should be parsed correctly."
msgstr ""

#: ../../peps/peps/pep-0042.rst:127
msgid "https://bugs.python.org/issue210678"
msgstr ""

#: ../../peps/peps/pep-0042.rst:129
msgid ""
"cgi.py's FieldStorage class should be more conservative with memory in the "
"face of large binary file uploads."
msgstr ""

#: ../../peps/peps/pep-0042.rst:132
msgid "https://bugs.python.org/issue210674"
msgstr ""

#: ../../peps/peps/pep-0042.rst:134
msgid ""
"There are two issues here: first, because read_lines_to_outerboundary() uses "
"readline() it is possible that a large amount of data will be read into "
"memory for a binary file upload.  This should probably look at the Content-"
"Type header of the section and do a chunked read if it's a binary type."
msgstr ""

#: ../../peps/peps/pep-0042.rst:140
msgid ""
"The second issue was related to the self.lines attribute, which was removed "
"in revision 1.56 of cgi.py (see also):"
msgstr ""

#: ../../peps/peps/pep-0042.rst:143
msgid "https://bugs.python.org/issue219806"
msgstr ""

#: ../../peps/peps/pep-0042.rst:145
msgid ""
"urllib should support proxy definitions that contain just the host and port"
msgstr ""

#: ../../peps/peps/pep-0042.rst:148
msgid "https://bugs.python.org/issue210849"
msgstr ""

#: ../../peps/peps/pep-0042.rst:150
msgid ""
"urlparse should be updated to comply with :rfc:`2396`, which defines "
"optional parameters for each segment of the path."
msgstr ""

#: ../../peps/peps/pep-0042.rst:153
msgid "https://bugs.python.org/issue210834"
msgstr ""

#: ../../peps/peps/pep-0042.rst:155
msgid ""
"The exceptions raised by pickle and cPickle are currently different; these "
"should be unified (probably the exceptions should be defined in a helper "
"module that's imported by both). [No bug report; I just thought of this.]"
msgstr ""

#: ../../peps/peps/pep-0042.rst:160
msgid ""
"More standard library routines should support Unicode.  For example, urllib."
"quote() could convert Unicode strings to UTF-8 and then do the usual %HH "
"conversion.  But this is not the only one!"
msgstr ""

#: ../../peps/peps/pep-0042.rst:164
msgid "https://bugs.python.org/issue216716"
msgstr ""

#: ../../peps/peps/pep-0042.rst:166
msgid ""
"There should be a way to say that you don't mind if ``str()`` or "
"``__str__()`` return a Unicode string object.  Or a different function -- "
"``ustr()`` has been proposed.  Or something..."
msgstr ""

#: ../../peps/peps/pep-0042.rst:170
msgid "http://sf.net/patch/?func=detailpatch&patch_id=101527&group_id=5470"
msgstr ""

#: ../../peps/peps/pep-0042.rst:172
msgid ""
"Killing a thread from another thread.  Or maybe sending a signal. Or maybe "
"raising an asynchronous exception."
msgstr ""

#: ../../peps/peps/pep-0042.rst:175
msgid "https://bugs.python.org/issue221115"
msgstr ""

#: ../../peps/peps/pep-0042.rst:177
msgid "The debugger (pdb) should understand packages."
msgstr ""

#: ../../peps/peps/pep-0042.rst:179
msgid "https://bugs.python.org/issue210631"
msgstr ""

#: ../../peps/peps/pep-0042.rst:181
msgid "Jim Fulton suggested the following:"
msgstr ""

#: ../../peps/peps/pep-0042.rst:195
msgid "https://bugs.python.org/issue415692"
msgstr ""

#: ../../peps/peps/pep-0042.rst:197
msgid ""
"Jim Fulton pointed out that binascii's b2a_base64() function has situations "
"where it makes sense not to append a newline, or to append something else "
"than a newline."
msgstr ""

#: ../../peps/peps/pep-0042.rst:201
msgid "Proposal:"
msgstr ""

#: ../../peps/peps/pep-0042.rst:203
msgid ""
"add an optional argument giving the delimiter string to be appended, "
"defaulting to \"\\\\n\""
msgstr ""

#: ../../peps/peps/pep-0042.rst:206
msgid ""
"possibly special-case None as the delimiter string to avoid adding the pad "
"bytes too???"
msgstr ""

#: ../../peps/peps/pep-0042.rst:209
msgid "https://bugs.python.org/issue415694"
msgstr ""

#: ../../peps/peps/pep-0042.rst:211
msgid ""
"pydoc should be integrated with the HTML docs, or at least be able to link "
"to them."
msgstr ""

#: ../../peps/peps/pep-0042.rst:214
msgid "https://bugs.python.org/issue405554"
msgstr ""

#: ../../peps/peps/pep-0042.rst:216
msgid "Distutils should deduce dependencies for .c and .h files."
msgstr ""

#: ../../peps/peps/pep-0042.rst:218
msgid "https://bugs.python.org/issue472881"
msgstr ""

#: ../../peps/peps/pep-0042.rst:220
msgid "asynchat is buggy in the face of multithreading."
msgstr ""

#: ../../peps/peps/pep-0042.rst:222
msgid "https://bugs.python.org/issue595217"
msgstr ""

#: ../../peps/peps/pep-0042.rst:224
msgid ""
"It would be nice if the higher level modules (httplib, smtplib, nntplib, "
"etc.) had options for setting socket timeouts."
msgstr ""

#: ../../peps/peps/pep-0042.rst:227
msgid "https://bugs.python.org/issue723287"
msgstr ""

#: ../../peps/peps/pep-0042.rst:229
msgid ""
"The curses library is missing two important calls: newterm() and delscreen()"
msgstr ""

#: ../../peps/peps/pep-0042.rst:232
msgid "https://bugs.python.org/issue665572, http://bugs.debian.org/175590"
msgstr ""

#: ../../peps/peps/pep-0042.rst:234
msgid ""
"It would be nice if the built-in SSL socket type could be used for non-"
"blocking SSL I/O.  Currently packages such as Twisted which implement async "
"servers using SSL have to require third-party packages such as pyopenssl."
msgstr ""

#: ../../peps/peps/pep-0042.rst:239
msgid "reST as a standard library module"
msgstr ""

#: ../../peps/peps/pep-0042.rst:241
msgid "The import lock could use some redesign."
msgstr ""

#: ../../peps/peps/pep-0042.rst:243
msgid "https://bugs.python.org/issue683658"
msgstr ""

#: ../../peps/peps/pep-0042.rst:245
msgid ""
"A nicer API to open text files, replacing the ugly (in some people's eyes) "
"\"U\" mode flag.  There's a proposal out there to have a new built-in type "
"textfile(filename, mode, encoding). (Shouldn't it have a bufsize argument "
"too?)"
msgstr ""

#: ../../peps/peps/pep-0042.rst:250
msgid "Support new widgets and/or parameters for Tkinter"
msgstr ""

#: ../../peps/peps/pep-0042.rst:252
msgid ""
"For a class defined inside another class, the __name__ should be \"outer."
"inner\", and pickling should work.  (GvR is no longer certain this is easy "
"or even right.)"
msgstr ""

#: ../../peps/peps/pep-0042.rst:256
msgid "https://bugs.python.org/issue633930"
msgstr ""

#: ../../peps/peps/pep-0042.rst:258
msgid ""
"Decide on a clearer deprecation policy (especially for modules) and act on "
"it."
msgstr ""

#: ../../peps/peps/pep-0042.rst:261
msgid "https://mail.python.org/pipermail/python-dev/2002-April/023165.html"
msgstr ""

#: ../../peps/peps/pep-0042.rst:263
msgid ""
"Provide alternatives for common uses of the types module; Skip Montanaro has "
"posted a proto-PEP for this idea:"
msgstr ""

#: ../../peps/peps/pep-0042.rst:266
msgid "https://mail.python.org/pipermail/python-dev/2002-May/024346.html"
msgstr ""

#: ../../peps/peps/pep-0042.rst:268
msgid ""
"Use pending deprecation for the types and string modules.  This requires "
"providing alternatives for the parts that aren't covered yet (e.g. string."
"whitespace and types.TracebackType). It seems we can't get consensus on this."
msgstr ""

#: ../../peps/peps/pep-0042.rst:273
msgid "Lazily tracking tuples?"
msgstr ""

#: ../../peps/peps/pep-0042.rst:275
msgid ""
"https://mail.python.org/pipermail/python-dev/2002-May/023926.html https://"
"bugs.python.org/issue558745"
msgstr ""

#: ../../peps/peps/pep-0042.rst:278
msgid ""
"Make 'as' a keyword.  It has been a pseudo-keyword long enough. (It's "
"deprecated in 2.5, and will become a keyword in 2.6.)"
msgstr ""

#: ../../peps/peps/pep-0042.rst:283
msgid "C API wishes"
msgstr ""

#: ../../peps/peps/pep-0042.rst:285
msgid ""
"Add C API functions to help Windows users who are building embedded "
"applications where the FILE \\* structure does not match the FILE \\* the "
"interpreter was compiled with."
msgstr ""

#: ../../peps/peps/pep-0042.rst:289
msgid "https://bugs.python.org/issue210821"
msgstr ""

#: ../../peps/peps/pep-0042.rst:291
msgid ""
"See this bug report for a specific suggestion that will allow a Borland C++ "
"builder application to interact with a python.dll build with MSVC."
msgstr ""

#: ../../peps/peps/pep-0042.rst:297
msgid "Tools"
msgstr ""

#: ../../peps/peps/pep-0042.rst:299
msgid "Python could use a GUI builder."
msgstr ""

#: ../../peps/peps/pep-0042.rst:301
msgid "https://bugs.python.org/issue210820"
msgstr ""

#: ../../peps/peps/pep-0042.rst:305
msgid "Building and Installing"
msgstr ""

#: ../../peps/peps/pep-0042.rst:307
msgid ""
"Modules/makesetup should make sure the 'config.c' file it generates from the "
"various Setup files, is valid C. It currently accepts module names with "
"characters that are not allowable in Python or C identifiers."
msgstr ""

#: ../../peps/peps/pep-0042.rst:312
msgid "https://bugs.python.org/issue216326"
msgstr ""

#: ../../peps/peps/pep-0042.rst:314
msgid ""
"Building from source should not attempt to overwrite the Include/graminit.h "
"and Parser/graminit.c files, at least for people downloading a source "
"release rather than working from Subversion or snapshots.  Some people find "
"this a problem in unusual build environments."
msgstr ""

#: ../../peps/peps/pep-0042.rst:320
msgid "https://bugs.python.org/issue219221"
msgstr ""

#: ../../peps/peps/pep-0042.rst:322
msgid ""
"The configure script has probably grown a bit crufty with age and may not "
"track autoconf's more recent features very well.  It should be looked at and "
"possibly cleaned up."
msgstr ""

#: ../../peps/peps/pep-0042.rst:326
msgid "https://mail.python.org/pipermail/python-dev/2004-January/041790.html"
msgstr ""

#: ../../peps/peps/pep-0042.rst:328
msgid "Make Python compliant to the FHS (the Filesystem Hierarchy Standard)"
msgstr ""

#: ../../peps/peps/pep-0042.rst:331
msgid "http://bugs.python.org/issue588756"
msgstr ""
