# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the PEPs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version:  PEPs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-20 10:43-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"

#: ../../peps/pep-0262.rst
msgid "Author"
msgstr "Autor"

#: ../../peps/pep-0262.rst:3
msgid "A.M. Kuchling <amk@amk.ca>"
msgstr ""

#: ../../peps/pep-0262.rst
msgid "Status"
msgstr "Status"

#: ../../peps/pep-0262.rst:4
msgid "Rejected"
msgstr ""

#: ../../peps/pep-0262.rst
msgid "Type"
msgstr "Tipo"

#: ../../peps/pep-0262.rst:5
msgid "Standards Track"
msgstr ""

#: ../../peps/pep-0262.rst
msgid "Topic"
msgstr ""

#: ../../peps/pep-0262.rst:6
msgid "Packaging"
msgstr ""

#: ../../peps/pep-0262.rst
msgid "Created"
msgstr "Criada em"

#: ../../peps/pep-0262.rst:8
msgid "08-Jul-2001"
msgstr ""

#: ../../peps/pep-0262.rst
msgid "Post-History"
msgstr "Pós-história"

#: ../../peps/pep-0262.rst:9
msgid "27-Mar-2002"
msgstr ""

#: ../../peps/pep-0262.rst:13
msgid ""
"This PEP was superseded by :pep:`345` and :pep:`376`, which were "
"accepted. Therefore, this PEP is (by implication) rejected."
msgstr ""

#: ../../peps/pep-0262.rst:18
msgid "Introduction"
msgstr "Introdução"

#: ../../peps/pep-0262.rst:20
msgid ""
"This PEP describes a format for a database of the Python software "
"installed on a system."
msgstr ""

#: ../../peps/pep-0262.rst:23
msgid ""
"(In this document, the term \"distribution\" is used to mean a set of "
"code that's developed and distributed together.  A \"distribution\" is "
"the same as a Red Hat or Debian package, but the term \"package\" already"
" has a meaning in Python terminology, meaning \"a directory with an "
"``__init__.py`` file in it.\")"
msgstr ""

#: ../../peps/pep-0262.rst:31
msgid "Requirements"
msgstr ""

#: ../../peps/pep-0262.rst:33
msgid ""
"We need a way to figure out what distributions, and what versions of "
"those distributions, are installed on a system.  We want to provide "
"features similar to CPAN, APT, or RPM.  Required use cases that should be"
" supported are:"
msgstr ""

#: ../../peps/pep-0262.rst:38
msgid "Is distribution X on a system?"
msgstr ""

#: ../../peps/pep-0262.rst:39
msgid "What version of distribution X is installed?"
msgstr ""

#: ../../peps/pep-0262.rst:40
msgid ""
"Where can the new version of distribution X be found?  (This can be "
"defined as either \"a home page where the user can go and find a download"
" link\", or \"a place where a program can find the newest version?\"  "
"Both should probably be supported.)"
msgstr ""

#: ../../peps/pep-0262.rst:44
msgid "What files did distribution X put on my system?"
msgstr ""

#: ../../peps/pep-0262.rst:45
msgid "What distribution did the file x/y/z.py come from?"
msgstr ""

#: ../../peps/pep-0262.rst:46
msgid "Has anyone modified x/y/z.py locally?"
msgstr ""

#: ../../peps/pep-0262.rst:47
msgid "What other distributions does this software need?"
msgstr ""

#: ../../peps/pep-0262.rst:48
msgid "What Python modules does this distribution provide?"
msgstr ""

#: ../../peps/pep-0262.rst:52
msgid "Database Location"
msgstr ""

#: ../../peps/pep-0262.rst:54
msgid ""
"The database lives in a bunch of files under <prefix>/lib/python<version"
">/install-db/.  This location will be called INSTALLDB through the "
"remainder of this PEP."
msgstr ""

#: ../../peps/pep-0262.rst:58
msgid ""
"The structure of the database is deliberately kept simple; each file in "
"this directory or its subdirectories (if any) describes a single "
"distribution.  Binary packagings of Python software such as RPMs can then"
" update Python's database by just installing the corresponding file into "
"the INSTALLDB directory."
msgstr ""

#: ../../peps/pep-0262.rst:64
msgid ""
"The rationale for scanning subdirectories is that we can move to a "
"directory-based indexing scheme if the database directory contains too "
"many entries.  For example, this would let us transparently switch from "
"INSTALLDB/Numeric to INSTALLDB/N/Nu/Numeric or some similar hashing "
"scheme."
msgstr ""

#: ../../peps/pep-0262.rst:72
msgid "Database Contents"
msgstr ""

#: ../../peps/pep-0262.rst:74
msgid ""
"Each file in INSTALLDB or its subdirectories describes a single "
"distribution, and has the following contents:"
msgstr ""

#: ../../peps/pep-0262.rst:77
msgid ""
"An initial line listing the sections in this file, separated by "
"whitespace.  Currently this will always be 'PKG-INFO FILES REQUIRES "
"PROVIDES'.  This is for future-proofing; if we add a new section, for "
"example to list documentation files, then we'd add a DOCS section and "
"list it in the contents.  Sections are always separated by blank lines."
msgstr ""

#: ../../peps/pep-0262.rst:84
msgid ""
"A distribution that uses the Distutils for installation should "
"automatically update the database.  Distributions that roll their own "
"installation will have to use the database's API to manually add or "
"update their own entry.  System package managers such as RPM or pkgadd "
"can just create the new file in the INSTALLDB directory."
msgstr ""

#: ../../peps/pep-0262.rst:91
msgid "Each section of the file is used for a different purpose."
msgstr ""

#: ../../peps/pep-0262.rst:94
msgid "PKG-INFO section"
msgstr ""

#: ../../peps/pep-0262.rst:96
msgid ""
"An initial set of :rfc:`822` headers containing the distribution "
"information for a file, as described in :pep:`241`, \"Metadata for Python"
" Software Packages\"."
msgstr ""

#: ../../peps/pep-0262.rst:101
msgid "FILES section"
msgstr ""

#: ../../peps/pep-0262.rst:103
msgid ""
"An entry for each file installed by the distribution. Generated files "
"such as .pyc and .pyo files are on this list as well as the original .py "
"files installed by a distribution; their checksums won't be stored or "
"checked, though."
msgstr ""

#: ../../peps/pep-0262.rst:109
msgid ""
"Each file's entry is a single tab-delimited line that contains the "
"following fields:"
msgstr ""

#: ../../peps/pep-0262.rst:112
msgid "The file's full path, as installed on the system."
msgstr ""

#: ../../peps/pep-0262.rst:114
msgid "The file's size"
msgstr ""

#: ../../peps/pep-0262.rst:116
msgid "The file's permissions.  On Windows, this field will always be 'unknown'"
msgstr ""

#: ../../peps/pep-0262.rst:119
msgid ""
"The owner and group of the file, separated by a tab. On Windows, these "
"fields will both be 'unknown'."
msgstr ""

#: ../../peps/pep-0262.rst:122
msgid ""
"A SHA1 digest of the file, encoded in hex.  For generated files such as "
"\\*.pyc files, this field must contain the string \"-\", which indicates "
"that the file's checksum should not be verified."
msgstr ""

#: ../../peps/pep-0262.rst:128
msgid "REQUIRES section"
msgstr ""

#: ../../peps/pep-0262.rst:130
msgid ""
"This section is a list of strings giving the services required for this "
"module distribution to run properly.  This list includes the distribution"
" name (\"python-stdlib\") and module names (\"rfc822\", \"htmllib\", "
"\"email\", \"email.Charset\").  It will be specified by an extra "
"'requires' argument to the ``distutils.core.setup()`` function.  For "
"example::"
msgstr ""

#: ../../peps/pep-0262.rst:139
msgid ""
"Eventually there may be automated tools that look through all of the code"
" and produce a list of requirements, but it's unlikely that these tools "
"can handle all possible cases; a manual way to specify requirements will "
"always be necessary."
msgstr ""

#: ../../peps/pep-0262.rst:146
msgid "PROVIDES section"
msgstr ""

#: ../../peps/pep-0262.rst:148
msgid ""
"This section is a list of strings giving the services provided by an "
"installed distribution.  This list includes the distribution name "
"(\"python-stdlib\") and module names (\"rfc822\", \"htmllib\", \"email\","
" \"email.Charset\")."
msgstr ""

#: ../../peps/pep-0262.rst:153
msgid ""
"XXX should files be listed?  e.g. $PREFIX/lib/color-table.txt, to pick up"
" data files, required scripts, etc."
msgstr ""

#: ../../peps/pep-0262.rst:156
msgid ""
"Eventually there may be an option to let module developers add their own "
"strings to this section.  For example, you might add \"XML parser\" to "
"this section, and other module distributions could then list \"XML "
"parser\" as one of their dependencies to indicate that multiple different"
" XML parsers can be used.  For now this ability isn't supported because "
"it raises too many issues: do we need a central registry of legal "
"strings, or just let people put whatever they like?  Etc., etc..."
msgstr ""

#: ../../peps/pep-0262.rst:167
msgid "API Description"
msgstr ""

#: ../../peps/pep-0262.rst:169
msgid ""
"There's a single fundamental class, InstallationDatabase.  The code for "
"it lives in distutils/install_db.py.  (XXX any suggestions for alternate "
"locations in the standard library, or an alternate module name?)"
msgstr ""

#: ../../peps/pep-0262.rst:174
msgid ""
"The InstallationDatabase returns instances of Distribution that contain "
"all the information about an installed distribution."
msgstr ""

#: ../../peps/pep-0262.rst:177
msgid ""
"XXX Several of the fields in Distribution are duplicates of ones in "
"distutils.dist.Distribution.  Probably they should be factored out into "
"the Distribution class proposed here, but can this be done in a backward-"
"compatible way?"
msgstr ""

#: ../../peps/pep-0262.rst:182
msgid "InstallationDatabase has the following interface::"
msgstr ""

#: ../../peps/pep-0262.rst:253
msgid "Deliverables"
msgstr ""

#: ../../peps/pep-0262.rst:255
msgid "A description of the database API, to be added to this PEP."
msgstr ""

#: ../../peps/pep-0262.rst:257
msgid ""
"Patches to the Distutils that 1) implement an InstallationDatabase class,"
" 2) Update the database when a new distribution is installed.  3) add a "
"simple package management tool, features to be added to this PEP.  (Or "
"should that be a separate PEP?)  See [2]_ for the current patch."
msgstr ""

#: ../../peps/pep-0262.rst:265
msgid "Open Issues"
msgstr ""

#: ../../peps/pep-0262.rst:267
msgid ""
"PJE suggests the installation database \"be potentially present on every "
"directory in sys.path, with the contents merged in sys.path order.  This "
"would allow home-directory or other alternate-location installs to work, "
"and ease the process of a distutils install command writing the file.\" "
"Nice feature: it does mean that package manager tools can take into "
"account Python packages that a user has privately installed."
msgstr ""

#: ../../peps/pep-0262.rst:275
msgid ""
"AMK wonders: what does setup.py do if it's told to install packages to a "
"directory not on sys.path?  Does it write an install-db directory to the "
"directory it's told to write to, or does it do nothing?"
msgstr ""

#: ../../peps/pep-0262.rst:280
msgid ""
"Should the package-database file itself be included in the files list?  "
"(PJE would think yes, but of course it can't contain its own checksum.  "
"AMK can't think of a use case where including the DB file matters.)"
msgstr ""

#: ../../peps/pep-0262.rst:285
msgid ""
"PJE wonders about writing the package DB file **first**, before "
"installing any other files, so that failed partial installations can both"
" be backed out, and recognized as broken. This PEP may have to specify "
"some algorithm for recognizing this situation."
msgstr ""

#: ../../peps/pep-0262.rst:291
msgid ""
"Should we guarantee the format of installation databases remains "
"compatible across Python versions, or is it subject to arbitrary change?"
"  Probably we need to guarantee compatibility."
msgstr ""

#: ../../peps/pep-0262.rst:297
msgid "Rejected Suggestions"
msgstr ""

#: ../../peps/pep-0262.rst:299
msgid ""
"Instead of using one text file per distribution, one large text file or "
"an anydbm file could be used.  This has been rejected for a few reasons."
"  First, performance is probably not an extremely pressing concern as the"
" database is only used when installing or removing software, a relatively"
" infrequent task.  Scalability also likely isn't a problem, as people may"
" have hundreds of Python packages installed, but thousands or tens of "
"thousands seems unlikely.  Finally, individual text files are compatible "
"with installers such as RPM or DPKG because a binary packager can just "
"drop the new database file into the database directory.  If one large "
"text file or a binary file were used, the Python database would then have"
" to be updated by running a postinstall script."
msgstr ""

#: ../../peps/pep-0262.rst:312
msgid ""
"On Windows, the permissions and owner/group of a file aren't stored.  "
"Windows does in fact support ownership and access permissions, but "
"reading and setting them requires the win32all extensions, and they "
"aren't present in the basic Python installer for Windows."
msgstr ""

#: ../../peps/pep-0262.rst:320
msgid "References"
msgstr "Referências"

#: ../../peps/pep-0262.rst:322
msgid ""
"[1] Michael Muller's patch (posted to the Distutils-SIG around 28 \\   "
"Dec 1999) generates a list of installed files."
msgstr ""

#: ../../peps/pep-0262.rst:325
msgid ""
"A patch to implement this PEP will be tracked as patch #562100 on "
"SourceForge. https://bugs.python.org/issue562100 . Code implementing the "
"installation database is currently in Python CVS in the "
"nondist/sandbox/pep262 directory."
msgstr ""

#: ../../peps/pep-0262.rst:333
msgid "Acknowledgements"
msgstr ""

#: ../../peps/pep-0262.rst:335
msgid ""
"Ideas for this PEP originally came from postings by Greg Ward, Fred L. "
"Drake Jr., Thomas Heller, Mats Wichmann, Phillip J. Eby, and others."
msgstr ""

#: ../../peps/pep-0262.rst:339
msgid ""
"Many changes and rewrites to this document were suggested by the readers "
"of the Distutils SIG."
msgstr ""

#: ../../peps/pep-0262.rst:344
msgid "Copyright"
msgstr "Copyright"

#: ../../peps/pep-0262.rst:346
msgid "This document has been placed in the public domain."
msgstr "Este documento foi colocado em domínio público."

#~ msgid ""
#~ "Michael Muller's patch (posted to the"
#~ " Distutils-SIG around 28 Dec 1999)"
#~ " generates a list of installed files."
#~ msgstr ""

